{"version":3,"sources":["webpack:///fs (ignored)","webpack:///crypto (ignored)","webpack:///src/app/services/varsglobal.ts","webpack:///src/app/models/user.ts","webpack:///stream (ignored)","webpack:///src/app/services/users.service.ts","webpack:///src/app/components/pages/sidebar/sidebar.component.ts","webpack:///src/app/components/pages/sidebar/sidebar.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/components/pages/cliente/cliente.component.ts","webpack:///src/app/components/pages/cliente/cliente.component.html","webpack:///src/app/services/menu.service.ts","webpack:///src/app/components/auth/login/login.component.ts","webpack:///src/app/components/auth/login/login.component.html","webpack:///src/app/services/client.service.ts","webpack:///src/app/services/loading.interceptor.ts","webpack:///src/app/services/token-interceptor.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/components/pages/footer-sidebar/footer-sidebar.component.ts","webpack:///src/app/components/pages/footer-sidebar/footer-sidebar.component.html","webpack:///src/app/services/document.service.ts","webpack:///src/app/components/pages/facturacion/facturacion.component.ts","webpack:///src/app/components/pages/facturacion/facturacion.component.html","webpack:///src/app/services/authentication.guard.ts","webpack:///src/app/app.module.ts","webpack:///src/app/app.routing.ts","webpack:///src/app/components/pages/producto/producto.component.ts","webpack:///src/app/components/pages/producto/producto.component.html","webpack:///src/app/components/pages/import-file/import-file.component.ts","webpack:///src/app/components/pages/import-file/import-file.component.html","webpack:///src/app/components/shared/data-table/data-table-datasource.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/components/auth/user-reg/user-reg.component.ts","webpack:///src/app/components/auth/user-reg/user-reg.component.html","webpack:///src/app/components/pages/patient/patient.component.ts","webpack:///src/app/components/pages/patient/patient.component.html","webpack:///src/app/components/shared/data-table/data-table.component.ts","webpack:///src/app/components/shared/data-table/data-table.component.html","webpack:///src/app/models/globlaIsclass.ts","webpack:///src/app/components/pages/header-principal/header-principal.component.ts","webpack:///src/app/components/pages/header-principal/header-principal.component.html","webpack:///src/app/components/pages/home/home.component.ts","webpack:///src/app/components/pages/home/home.component.html","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["UrlApi","urlMongol","urlApitest_CNet","App","User","id","name","idperfil","email","pass","cargo","departamento","sexo","telefono","ext","date","conectedIP","image","token","UsersService","http","cookies","url","user","win","console","log","get","fecha","hora","app","post","window","set","cli","params","JSON","stringify","toString","headers","bar","body","data","table","usu","providedIn","SidebarComponent","_menuS","someKL","Loadmenu","getMenu","subscribe","response","AuthMenu","enc","list","subb","encc","$","hasClass","removeClass","addClass","slideUp","parent","next","slideDown","sessionStorage","getItem","showsidebar","closesidebar","selector","templateUrl","styleUrls","environment","production","ClienteComponent","MenuService","LoginComponent","_router","_activateR","_sUsuario","_toastrS","_authS","_http","_modalS","_bsModalRef","spinner","titlePage1","titlePage2","loading","myapp","ULoginEmit","removeItem","password","getIP","removeTokens","show","type","size","bdColor","color","template","setTimeout","hide","event","fechaC","Date","toLocaleDateString","replace","horaC","toLocaleTimeString","ipAddress","login","userLogin","setItem","nombre","storeTokens","navigate","emit","err","error","positionClass","getIPAddress","res","ip","ngxModalOptions","backdrop","keyboard","animated","modalRef","VerifUser","ClientService","_httpC","LoadingInterceptor","countRequest","req","handle","pipe","TokenInterceptorService","_inj","authS","tokenizedReq","clone","setHeaders","Authorization","getTokens","AppComponent","title","FooterSidebarComponent","CloseSession","DocumentService","ELEMENT_DATA","FacturacionComponent","_docS","_cliS","displayedColumns","dataSource","checked","selection","ClienteNew","ClientesAll","animalControl","required","selectFormControl","disabledchk","value","Disablechk","GetAllCli","getDocIdentity","tipo","identificacion","modalRef2","saveCli","closeModal","filterValue","target","filter","trim","toLowerCase","numSelected","selected","length","numRows","isAllSelected","clear","forEach","row","select","isSelected","selectRow","getDocById","documents","getCli","openModal","val","undefined","AuthenticationGuard","auth","state","isLogged","AppModule","provide","useClass","multi","forRoot","declarations","imports","schemas","providers","bootstrap","myRoutes","path","component","canActivate","children","RoutingProviders","Routing","ProductoComponent","ImportFileComponent","userS","spinnerEnabled","dataSheet","evt","header","vartarget","isExcelFile","files","match","loadingShow","inputFile","nativeElement","reader","FileReader","onload","e","bstr","result","wb","wsname","SheetNames","ws","Sheets","sheet_to_json","readAsBinaryString","onloadend","keys","Object","dt","text","icon","buttons","dangerMode","then","willDelete","saveImport","status","onChange","removeData","subirData","EXAMPLE_DATA","DataTableDataSource","dataMutations","paginator","page","sort","sortChange","getPagedData","getSortedData","startIndex","pageIndex","pageSize","splice","active","direction","a","b","isAsc","compare","AuthService","_actRou","_cookieS","tokens","expireTime","localStorage","UserRegComponent","_cliU","router","UsuarioNew","UsuariosAll","GetAllUsu","saveUsu","nombre_apellido","type_ident","no_ident","pantalla","getAllUser","goToImport","applyFilter","PatientComponent","PacienteNew","PacienteAll","getDocuments","Nombre","Tipo","TipoDocI","DocI","getAllDoc","findCli","DataTableComponent","Clientes","seleccione","estatus","Fecha","Documentos","_id","descripcion","Usuarios","codigo","department","usu_status","fotoperfil","Pacientes","Codigo","Apellido","Direccion","Celular","Telefono","Sexo","FechaNac","Edad","MayorEdad","TipoSangre","Email","ARS","NSS","NoAfiliado","TipoServicio","HeaderPrincipalComponent","HomeComponent","bootstrapModule","webpackEmptyAsyncContext","Promise","resolve","Error","code","module","exports"],"mappings":"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","file":"main-es5.js","sourcesContent":["/* (ignored) */","/* (ignored) */","export var UrlApi = {\r\n    urlMongol: 'http://localhost:3900/api/',\r\n    urlApitest_CNet: '/api/',\r\n    App: 'Factools'\r\n};","export class User{\r\n    constructor(\r\n        public id: string,\r\n        public name: string,\r\n        public idperfil: string,\r\n        public email: string,\r\n        public pass: string,\r\n        public cargo: string,\r\n        public departamento: string,  \r\n        public sexo: string,\r\n        public telefono: number,\r\n        public ext: string,\r\n        public date : any, \r\n        public conectedIP: string,             \r\n        public image: string,\r\n        public token: string\r\n    ) {}\r\n}","/* (ignored) */","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Observable } from \"../../../node_modules/rxjs\";\r\nimport { CookieService } from \"ngx-cookie-service\";\r\nimport { UrlApi } from './varsglobal';\r\nimport { Usuarios } from \"../models/globlaIsclass\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class UsersService {\r\n\r\n  url: string = UrlApi.urlApitest_CNet;\r\n\r\n  constructor(private http: HttpClient, private cookies: CookieService) { }\r\n\r\n  login(user: any, win:any): Observable<any> {\r\n\r\n    console.log(user);\r\n    return this.http.get(this.url + \"usuario/login/\" + user.email + \"&\" + user.pass + \"&\" + user.fecha + \"&\" + user.hora + \"&\" + user.conectedIP + \"&\" + user.app+ \"&\" + win);\r\n  }\r\n  register(user: any): Observable<any> {\r\n    return this.http.post(\"https://reqres.in/api/register\", user.email, user.pass);\r\n  }\r\n\r\n  getAllUser(window: any,user: any): Observable<any> {\r\n    return this.http.get(this.url + \"usuario\");\r\n  }\r\n\r\n  setToken(token: string) {\r\n    this.cookies.set(\"token\", token);\r\n  }\r\n  getToken() {\r\n    return this.cookies.get(\"token\");\r\n  }\r\n\r\n  saveUsu(cli) {\r\n    console.log(cli);\r\n    let params = JSON.stringify(cli);\r\n    console.log(params.toString());\r\n    let headers = new HttpHeaders().set('Content-Type', 'application/json');\r\n\r\n    let bar = JSON.stringify(cli);\r\n    let body = new HttpParams();\r\n    body = body.set('bar', bar);\r\n\r\n    // return this._httpC.post(this.url + 'cliente', body, { headers: headers });\r\n    return this.http.post(this.url + 'usuario', params, { headers: headers });\r\n  }\r\n\r\n  saveImport(data,table) {\r\n   // console.log(data);\r\n   let usu: Usuarios[];\r\n   usu = data as Usuarios[];\r\n   //usu.nombre_apellido = data.nombre;\r\n   console.log(usu);\r\n    let params = JSON.stringify(data);\r\n   // console.log(params.toString());\r\n    let headers = new HttpHeaders().set('Content-Type', 'application/json');\r\n\r\n    let bar = JSON.stringify(data);\r\n    let body = new HttpParams();\r\n    body = body.set('bar', bar);\r\n\r\n    // return this._httpC.post(this.url + 'cliente', body, { headers: headers });\r\n    return this.http.post(this.url + 'usuario/ImportD', params, { headers: headers });\r\n  }\r\n\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { User } from 'src/app/models/user';\r\nimport { MenuService } from '../../../services/menu.service';\r\nimport { Menu } from '../../../models/menu';\r\nimport { Observable } from 'rxjs';\r\ndeclare var jQuery: any;\r\ndeclare var $: any;\r\n\r\n@Component({\r\n  selector: 'app-sidebar',\r\n  templateUrl: './sidebar.component.html',\r\n  styleUrls: ['./sidebar.component.css']\r\n})\r\nexport class SidebarComponent implements OnInit {\r\n  AuthMenu: any;\r\n  user: any;\r\n\r\n  constructor(private _menuS: MenuService) { }\r\n\r\n  ngOnInit(): void {\r\n    let someKL: any;\r\n    //someKL = this._menuS.getMenu(User);\r\n    this.Loadmenu();\r\n  }\r\n\r\n  Loadmenu() {\r\n\r\n    this._menuS.getMenu(User).subscribe(\r\n      response => {\r\n        this.AuthMenu = response\r\n        //console.log(this.AuthMenu);\r\n      }\r\n    )\r\n  }\r\n\r\n  showDropSidebar(enc) {\r\n    let list = \"list-\"+enc;\r\n    let subb = \".sub-\"+ enc;\r\n    let encc = \".encc-\"+ enc;\r\n    console.log(\"sub-\"+ enc)\r\n\r\n    if ($(subb).hasClass(\"subLi\")) {\r\n      $(subb).removeClass(\"subLi\");\r\n    }else{\r\n      $(subb).addClass(\"subLi\");\r\n    }\r\n\r\n    if ( $(\".sidebar-dropdown\").hasClass(\"downAfter\"))\r\n     {     \r\n      \r\n      $(\".sidebar-dropdown\").removeClass(\"active downAfter\");\r\n      $(\".sidebar-submenu\").removeClass(\"openSideMenu\");\r\n      $(\".sidebar-submenu\").addClass(\"closeSideMenu\");\r\n      $(\".sidebar-submenu\").slideUp(0);\r\n    } else {\r\n     // let listaC = document.getElementById(\"list\");\r\n      //if ($(subb).hasClass(\"subLi\")) {\r\n        $(\".sidebar-dropdown > a\").parent();\r\n        $(\".sidebar-dropdown > a\").next(\".sidebar-submenu\");\r\n        $(\".sidebar-dropdown > a\").slideDown(0);\r\n        $(\".sidebar-dropdown\").addClass(\"active downAfter\");\r\n        $(\".sidebar-submenu\").removeClass(\"closeSideMenu\");\r\n        $(\".sidebar-submenu\").addClass(\"openSideMenu\");\r\n        $(\".sidebar-submenu\").slideDown(0);\r\n      //  $(subb).removeClass(\"subLi\");\r\n     // }\r\n      \r\n    }\r\n\r\n    /*\r\n     $(\".sidebar-dropdown\").removeClass(\"downAfter\");   \r\n     $(\".sidebar-dropdown > a\").click(function() {     \r\n       $(\".sidebar-submenu\").slideUp(0);\r\n       if (\r\n         $(\".sidebar-dropdown\").hasClass(\"downAfter\")\r\n       ) {\r\n         \r\n         $(this)\r\n           .parent()\r\n           .removeClass(\"active downAfter\");\r\n       } else {\r\n        \r\n         $(\".sidebar-dropdown\").removeClass(\"active\");  \r\n         $(this)\r\n           .next(\".sidebar-submenu\")\r\n           .slideDown(0);\r\n         $(this)\r\n           .parent()\r\n           .addClass(\"active downAfter\");\r\n       }\r\n     });*/\r\n  }\r\n  closesidebar() {\r\n    $(\"#sidebar\").removeClass(\"toggled\");\r\n  }\r\n\r\n  showsidebar() {\r\n    $(\"#sidebar\").addClass(\"toggled\");\r\n  }\r\n\r\n  loaduser(){\r\n  this.user = sessionStorage.getItem(\"Access User\");\r\n  }\r\n}\r\n\r\n","<div>\r\n\r\n  <a id=\"show-sidebar\" class=\"btn btn-sm btn-dark\" (click)=\"showsidebar()\">\r\n    <i class=\"fa fa-bars\"></i>\r\n  </a>\r\n  <nav id=\"sidebar\" class=\"sidebar-wrapper\">\r\n    <div class=\"sidebar-content\">\r\n      <div class=\"sidebar-brand\">\r\n        <a>FACTOOLS</a>\r\n        <div id=\"close-sidebar\" (click)=\"closesidebar()\">\r\n          <i class=\"fa fa-times\"></i>\r\n        </div>\r\n      </div>\r\n      <div class=\"sidebar-header\">\r\n        <div class=\"user-pic\">\r\n          <img class=\"img-responsive img-rounded\"\r\n            src=\"https://raw.githubusercontent.com/azouaoui-med/pro-sidebar-template/gh-pages/src/img/user.jpg\"\r\n            alt=\"User picture\">\r\n        </div>\r\n        <div class=\"user-info\">\r\n          <span class=\"user-name\">\r\n            <strong>{{user}}</strong>\r\n          </span>\r\n          <span class=\"user-role\">Administrator</span>\r\n          <span class=\"user-status\">\r\n            <i class=\"fa fa-circle\"></i>\r\n            <span>Online</span>\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <!-- sidebar-header  -->\r\n      <div class=\"sidebar-search\">\r\n        <div>\r\n          <div class=\"input-group\">\r\n            <input type=\"text\" class=\"form-control search-menu\" placeholder=\"Search...\">\r\n            <div class=\"input-group-append\">\r\n              <span class=\"input-group-text\">\r\n                <i class=\"fa fa-search\" aria-hidden=\"true\"></i>\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- sidebar-search  -->\r\n      <div class=\"sidebar-menu\">\r\n        <ul *ngFor=\"let menu of AuthMenu\">\r\n          <div>\r\n          \r\n            <li id=\"enc{{menu.codigo}}\" class=\"sidebar-dropdown enc-{{menu.codigo}}\" *ngIf=\"menu.nivelMenu==1\"\r\n              [routerLink]=\"[menu.url]\" (click)=\"showDropSidebar(menu.codigo)\">\r\n              <a [routerLink]=\"[menu.url]\">\r\n                <span style=\"padding: 0px;\"><i [ngClass]=\"menu.icono\"></i>{{menu.nombre}}</span>\r\n              </a>\r\n              <div >\r\n                <ul *ngFor=\"let men of AuthMenu\" id=\"list-{{menu.codigo}}\">\r\n                  <div>\r\n                    <li  *ngIf=\"men.nivelMenu===2 && men.menuPadre===menu.codigo\" class=\"subLi sub-{{men.menuPadre}}\"\r\n                      [routerLink]=\"[men.url]\" >\r\n                      <a [routerLink]=\"[men.url]\">\r\n                        <span style=\"padding: 0px;\"><i [ngClass]=\"men.icono\"></i>{{men.nombre}}</span>\r\n                      </a>\r\n                    </li>\r\n                  </div>\r\n                </ul>\r\n              </div>\r\n              \r\n\r\n            </li>\r\n          </div>\r\n\r\n   \r\n   \r\n      <!--\r\n            <li class=\"sidebar-dropdown\">\r\n              <a >\r\n                <i class=\"fa fa-shopping-cart\"></i>\r\n                <span>E-commerce</span>\r\n                <span class=\"badge badge-pill badge-danger\">3</span>\r\n              </a>\r\n              <div class=\"sidebar-submenu\">\r\n                <ul>\r\n                  <li>\r\n                    <a >Products\r\n      \r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a >Orders</a>\r\n                  </li>\r\n                  <li>\r\n                    <a >Credit cart</a>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </li>\r\n            <li class=\"sidebar-dropdown\">\r\n              <a >\r\n                <i class=\"far fa-gem\"></i>\r\n                <span>Components</span>\r\n              </a>\r\n              <div class=\"sidebar-submenu\">\r\n                <ul>\r\n                  <li>\r\n                    <a >General</a>\r\n                  </li>\r\n                  <li>\r\n                    <a >Panels</a>\r\n                  </li>\r\n                  <li>\r\n                    <a >Tables</a>\r\n                  </li>\r\n                  <li>\r\n                    <a >Icons</a>\r\n                  </li>\r\n                  <li>\r\n                    <a >Forms</a>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </li>\r\n            <li class=\"sidebar-dropdown\">\r\n              <a >\r\n                <i class=\"fa fa-chart-line\"></i>\r\n                <span>Charts</span>\r\n              </a>\r\n              <div class=\"sidebar-submenu\">\r\n                <ul>\r\n                  <li>\r\n                    <a >Pie chart</a>\r\n                  </li>\r\n                  <li>\r\n                    <a >Line chart</a>\r\n                  </li>\r\n                  <li>\r\n                    <a >Bar chart</a>\r\n                  </li>\r\n                  <li>\r\n                    <a >Histogram</a>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </li>\r\n            <li class=\"sidebar-dropdown\">\r\n              <a >\r\n                <i class=\"fa fa-globe\"></i>\r\n                <span>Maps</span>\r\n              </a>\r\n              <div class=\"sidebar-submenu\">\r\n                <ul>\r\n                  <li>\r\n                    <a >Google maps</a>\r\n                  </li>\r\n                  <li>\r\n                    <a >Open street map</a>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </li>\r\n            <li class=\"header-menu\">\r\n              <span>Extra</span>\r\n            </li>\r\n            <li>\r\n              <a >\r\n                <i class=\"fa fa-book\"></i>\r\n                <span>Documentation</span>\r\n                <span class=\"badge badge-pill badge-primary\">Beta</span>\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a >\r\n                <i class=\"fa fa-calendar\"></i>\r\n                <span>Calendar</span>\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a >\r\n                <i class=\"fa fa-folder\"></i>\r\n                <span>Examples</span>\r\n              </a>\r\n            </li>\r\n          -->\r\n      </ul>\r\n    </div>\r\n    <!-- sidebar-menu  -->\r\n</div>\r\n<!-- footer-sidebar-content  -->\r\n<app-footer-sidebar></app-footer-sidebar>\r\n</nav>\r\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-cliente',\r\n  templateUrl: './cliente.component.html',\r\n  styleUrls: ['./cliente.component.css']\r\n})\r\nexport class ClienteComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>cliente works!</p>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Observable } from \"../../../node_modules/rxjs\";\r\nimport { CookieService } from \"ngx-cookie-service\";\r\nimport { UrlApi } from './varsglobal';\r\nimport { Menu } from '../models/menu';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MenuService {\r\n  url: string = UrlApi.urlApitest_CNet;\r\n menu: Observable<Menu>;\r\n  constructor(private http: HttpClient) { }\r\n\r\n  \r\n  getMenu(user: any): Observable<any> {\r\n    \r\n    let data:any;\r\n    //this.http.get(this.url + \"menup/\");\r\n    return this.http.get(this.url + \"menup/\");\r\n  }\r\n}\r\n","import { Component, Input, OnInit, Output, TemplateRef, ViewChild } from '@angular/core';\r\nimport { User } from '../../../models/user';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { UsersService } from '../../../services/users.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthService } from '../../../services/auth.service';\r\nimport { UrlApi } from '../../../services/varsglobal';\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { BsModalRef, BsModalService, ModalOptions } from 'ngx-bootstrap/modal';\r\nimport { EventEmitter } from 'events';\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  email: string;\r\n  password: string;\r\n  user: any;\r\n  titlePage1: string = \"Inicio de Sesión\";\r\n  titlePage2: string = \"Entrar\";\r\n  public loading = false;\r\n  ipAddress: string;\r\n  myapp: string = UrlApi.App;\r\n  fechaC: any;\r\n  horaC: any;\r\n  userLogin: User;\r\n  @Output() ULoginEmit: any = new EventEmitter();\r\n  modalRef: BsModalRef;\r\n\r\n  constructor(\r\n    private _router: Router,\r\n    private _activateR: ActivatedRoute,\r\n    private _sUsuario: UsersService,\r\n    private _toastrS: ToastrService,\r\n    private _authS: AuthService,\r\n    private _http: HttpClient,\r\n    private _modalS: BsModalService,\r\n    public _bsModalRef: BsModalRef,\r\n    private spinner: NgxSpinnerService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    sessionStorage.removeItem(\"Access User\");\r\n    this.user = [{ email: null, password: null, conectedIP: null, fecha: null, hora: null, app: null }];\r\n    this.getIP();\r\n    this._authS.removeTokens();\r\n\r\n    this.spinner.show(\"mySpinner\", {\r\n      type: \"square-jelly-box\",\r\n      size: \"large\",\r\n      bdColor: \"rgba(0,0,0,0.67)\",\r\n      color: \"#8ebacb\",\r\n      template: \"<img src='https://media.giphy.com/media/o8igknyuKs6aY/giphy.gif' />\"\r\n    });\r\n\r\n    setTimeout(() => {\r\n      /** spinner ends after 5 seconds */\r\n      this.spinner.hide();\r\n    }, 5000);\r\n    // document.querySelector('body').setAttribute('themebg-pattern', 'theme1');\r\n  }\r\n\r\n  VerifUser(event) {\r\n    this.fechaC = new Date().toLocaleDateString().replace('/', '-').replace('/', '-');\r\n    this.horaC = new Date().toLocaleTimeString();\r\n    this.user.conectedIP = this.ipAddress;\r\n    this.user.fecha = this.fechaC;\r\n    this.user.hora = this.horaC;\r\n    this.user.app = this.myapp;\r\n\r\n    \r\n   // console.log(this.ipAddress, this.myapp, this.fechaC, this.horaC);\r\n    this.loading = true;\r\n    this._sUsuario.login(this.user,\"Login\").subscribe(\r\n      response => {\r\n        //Alert\r\n        /*\r\n        swal('Articulo creado!!!',\r\n          'El Articulo se ha creado exitosamente',\r\n          'success'\r\n        );\r\n*/      this.userLogin = response;        \r\n      // sessionStorage.setItem(\"Access User\", JSON.stringify(response));\r\n        sessionStorage.setItem(\"Access User\", response.nombre);\r\n        //sessionStorage.setItem(\"User\", response.nombre);\r\n        // sessionStorage.getItem(\"KeyUsu\")\r\n        //console.log(response);\r\n        // console.log(this.userLogin);\r\n        this._authS.storeTokens(response.token, 30);\r\n        this._router.navigate(['/home']);\r\n\r\n        this.ULoginEmit.emit(this.userLogin);\r\n        this.loading = false;\r\n      },\r\n      err => {\r\n        // Display an error toast, with a title\r\n        //this._toastrS.error('I do not think that word means what you think it means.', 'Inconceivable!')\r\n        /*swal('Error??',\r\n          'Credenciales digitadas no son correctas??',\r\n          'Intentar nuevamente o reportar a Tecnologia'\r\n        );*/\r\n        this.loading = false;\r\n\r\n        this._toastrS.error('Las credenciales digitadas no son correctas??', 'Error', {\r\n          positionClass: 'toast-top-left'\r\n        });\r\n\r\n        console.log(err);\r\n      }\r\n\r\n    );\r\n\r\n  }\r\n\r\n  getIP() {\r\n\r\n    this.getIPAddress().subscribe((res: any) => {\r\n      this.ipAddress = res.ip;\r\n    });\r\n    /* setTimeout(() => {\r\n       console.log('time waiting 3000');\r\n     }, 3000);*/\r\n  }\r\n\r\n  getIPAddress() {\r\n    // //'https://cors-anywhere.herokuapp.com/http://api.ipify.org/?format=json'\r\n    return this._http.get(\"https://cors-anywhere.herokuapp.com/http://api.ipify.org/?format=json\");\r\n  }\r\n\r\n  openModal(template: TemplateRef<any>) {\r\n    //No cierra el modal dando click fuera\r\n    let ngxModalOptions: ModalOptions = {\r\n      backdrop: 'static',\r\n      keyboard: false,\r\n      animated: true\r\n    };\r\n\r\n    //Abriendo modal\r\n    this.modalRef = this._modalS.show(template, ngxModalOptions);\r\n\r\n  }\r\n\r\n  closeModal() {\r\n    this.modalRef.hide();\r\n  }\r\n}\r\n\r\n","<section class=\"login p-fixed d-flex text-center bg-primary common-img-bg\">\r\n  <div class=\"auth-fluid\">\r\n    <div class=\"row\">\r\n      <div class=\"col-sm-12\">\r\n        <div class=\"login-card card-body auth-body\">\r\n\r\n          <form action=\"\" class=\"md-float-material\" #loginForm=\"ngForm\" (ngSubmit)=\"VerifUser($event)\">\r\n            <div class=\"text-center\">\r\n              <img src=\"assets/images/auth/LogoFacTool.png\" alt=\"logo.png\">\r\n            </div>\r\n            <div class=\"auth-box\">\r\n              <div class=\"row m-b-20\">\r\n                <div class=\"col-md-12\">\r\n                  <h3 class=\"txt-primary\" style=\"text-align: center;\">{{titlePage1}}</h3>\r\n                </div>\r\n              </div>\r\n              <hr />\r\n              <div class=\"form-group\">\r\n                <input type=\"email\" class=\"form-control\" name=\"email\" placeholder=\"Correo electronico\"\r\n                  [(ngModel)]=\"user.email\" #email=\"ngModel\" required>\r\n                <h3 *ngIf=\"!email.valid && email.touched\" class=\"lblvalid\">\r\n                  El correo digitado no es valido??\r\n                </h3>\r\n                <span class=\"md-line\"></span>\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <input type=\"password\" class=\"form-control\" name=\"pass\" placeholder=\"Contraseña\" [(ngModel)]=\"user.pass\"\r\n                  #pass=\"ngModel\" required>\r\n                <h3 *ngIf=\"!pass.valid && pass.touched\" class=\"lblvalid\">\r\n                  La contraseña no es valida??\r\n                </h3>\r\n                <span class=\"md-line\"></span>\r\n              </div>\r\n              <div class=\"clearfix\"></div>\r\n              <div class=\"row m-t-25 text-left\">\r\n                <div class=\"col-sm-7 col-xs-12\">\r\n                  <div class=\"checkbox-fade fade-in-primary\">\r\n                    <label class=\"lblSinBold\">\r\n                      <input type=\"checkbox\" value=\"\">\r\n                      <span class=\"cr\"><i class=\"cr-icon icofont icofont-ui-check txt-primary\"></i></span>\r\n                      <span class=\"text-inverse\">Guardar credenciales</span>\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-sm-5 col-xs-12 forgot-phone text-right\">\r\n                  <a [routerLink]=\"['/auth/forgot']\" class=\"text-right f-w-600 text-inverse\"> ¿Olvidaste tu\r\n                    contraseña?</a>\r\n                </div>\r\n              </div>\r\n              <div class=\"row m-t-30\">\r\n                <div class=\"col-md-12\">\r\n                  <input type=\"submit\"\r\n                    class=\"btn btn-primary btn-md btn-block waves-effect text-center m-b-20 btn-round icofont icofont-check-circled\"\r\n                    [disabled]=\"loginForm.invalid\" value={{titlePage2}} /><i _ngcontent-ngf-c9=\"\"\r\n                    class=\"icofont icofont-check-circled\"></i>\r\n\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <!--Begin Modal-->\r\n  <ng-template #template2 data-backdrop=\"static\" data-keyboard=\"false\">\r\n    <div id=\"modalTest\">\r\n      <div class=\"modal-header\">\r\n        <h4 class=\"modal-title\" id=\"modal-title\">Profile deletion</h4>\r\n        <button type=\"button\" class=\"close\" aria-describedby=\"modal-title\" (click)=\"closeModal()\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <p><strong>Are you sure you want to delete <span class=\"text-primary\">\"John Doe\"</span> profile?</strong></p>\r\n        <p>All information associated to this user profile will be permanently deleted.\r\n          <span class=\"text-danger\">This operation can not be undone.</span>\r\n        </p>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"closeModal()\">Cancel</button>\r\n        <button type=\"button\" class=\"btn btn-danger\" (click)=\"closeModal()\">Ok</button>\r\n      </div>\r\n    </div>\r\n\r\n  </ng-template>\r\n\r\n  <!--button type=\"button\" class=\"btn btn-primary\" (click)=\"openModal(template2)\" data-toggle=\"modal\" data-backdrop=\"static\" data-keyboard=\"false\">Create</button-->\r\n\r\n  <ng-template #template data-backdrop=\"static\" data-keyboard=\"false\">\r\n    <div class=\"modal-header\" data-backdrop=\"static\" data-keyboard=\"false\">\r\n      <h4 class=\"modal-title pull-left\">Modal</h4>\r\n      <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"closeModal()\"><span\r\n          aria-hidden=\"true\">&times;</span></button>\r\n    </div>\r\n  </ng-template>\r\n  <!--End Modal-->\r\n</section>\r\n\r\n<div class=\"my-container\">\r\n  <ng-template #customLoadingTemplate>\r\n  </ng-template>\r\n\r\n  <ngx-loading [show]=\"loading\" [config]=\"{ backdropBorderRadius: '3px' }\" [template]=\"customLoadingTemplate\">\r\n  </ngx-loading>\r\n</div>\r\n\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Clientes } from '../models/globlaIsclass';\r\nimport { UrlApi } from '../services/varsglobal';\r\nimport { Observable } from \"../../../node_modules/rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ClientService {\r\n  url: string = UrlApi.urlApitest_CNet;\r\n\r\n  constructor(private _httpC: HttpClient) { }\r\n\r\n  getCli(): Observable<any> {\r\n    return this._httpC.get(this.url + \"cliente\");\r\n  }\r\n  saveCli(cli) {\r\n    //console.log(cli);\r\n    let params = JSON.stringify(cli);\r\n  // console.log(params.toString());\r\n    let headers = new HttpHeaders().set('Content-Type', 'application/json');\r\n\r\n    let bar = JSON.stringify(cli);\r\n    let body = new HttpParams();\r\n    body = body.set('bar', bar);\r\n\r\n   // return this._httpC.post(this.url + 'cliente', body, { headers: headers });\r\n    return this._httpC.post(this.url + 'cliente', params, { headers: headers });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { finalize, tap } from 'rxjs/operators';\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\n\r\n@Injectable()\r\n\r\nexport class LoadingInterceptor implements HttpInterceptor{\r\n    private countRequest = 0;\r\n    private idMessage: string;\r\n    constructor(\r\n      public spinner: NgxSpinnerService\r\n    ) {}\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n        this.spinner.show()\r\n\r\n        this.countRequest++;\r\n\r\n        return next.handle(req)\r\n\r\n            .pipe ( tap (\r\n\r\n                    event => console.log(event),\r\n\r\n                    error => console.log( error )\r\n\r\n                ), finalize(() => {\r\n\r\n                    this.countRequest--;\r\n\r\n                    if ( this.countRequest == 0 ) this.spinner.hide ()\r\n                })\r\n            );\r\n    }\r\n}\r\n//import { NzMessageService } from 'ng-zorro-antd';\r\n/*\r\n@Injectable()\r\nexport class LoadingInterceptor implements HttpInterceptor{\r\n    private countRequest = 0;\r\n    private idMessage: string;\r\n\r\n    constructor(\r\n        public message : NzMessageService\r\n    ){}\r\n/*\r\n    intercept(request: HttpRequest(unknown), next: HttpHandler): Observable<HttpEvent<unknown>>{\r\n       if(!this.countRequest){\r\n           this.idMessage = this.message\r\n           .loading('Cargando...',) {nzDuration:0}).messageId;\r\n       }\r\n\r\n       this.counRequest++;\r\n       return next.handle(request)\r\n       .pipe(\r\n           finalize( ()=>{\r\n               this.countRequest--;\r\n               if(!this.countRequest){\r\n                   this.message.remove(this.idMessage);\r\n               }\r\n           }\r\n           )\r\n       )\r\n    }\r\n}\r\n*/","import { Injectable, Injector } from '@angular/core';\r\nimport { HttpInterceptor } from '@angular/common/http';\r\nimport { AuthService } from './auth.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TokenInterceptorService implements HttpInterceptor {\r\n\r\n  constructor( private _inj: Injector) { }\r\n\r\n  intercept(req, next){\r\n    let authS = this._inj.get(AuthService);\r\n    let tokenizedReq = req.clone({\r\n      setHeaders:{\r\n        Authorization : `Bearer ${authS.getTokens()}`\r\n      }\r\n    })\r\n\r\n    return next.handle(tokenizedReq)\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'TechDev';\r\n\r\n  constructor(private spinner: NgxSpinnerService) {}\r\n \r\n  ngOnInit() {\r\n    /** spinner starts on init */\r\n    this.spinner.show();\r\n \r\n    setTimeout(() => {\r\n      /** spinner ends after 5 seconds */\r\n      this.spinner.hide();\r\n    }, 5000);\r\n  }\r\n}\r\n","<router-outlet></router-outlet>\r\n<ngx-spinner bdColor = \"rgba(0,0,0,0.67)\" size = \"large\" color = \"#8ebacb\" type = \"square-jelly-box\" [fullScreen] = \"true\"><p style=\"color: white\" > Loading... </p></ngx-spinner>","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../../services/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-footer-sidebar',\r\n  templateUrl: './footer-sidebar.component.html',\r\n  styleUrls: ['./footer-sidebar.component.css']\r\n})\r\nexport class FooterSidebarComponent implements OnInit {\r\n\r\n  constructor(private _authS: AuthService, private _router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  CloseSession(){\r\n     this._authS.removeTokens();\r\n     this._router.navigate(['login']);\r\n  }\r\n}\r\n"," <!-- sidebar-content  -->\r\n <div class=\"sidebar-footer\">\r\n    <a >\r\n      <i class=\"fa fa-bell\"></i>\r\n      <span class=\"badge badge-pill badge-warning notification\">3</span>\r\n    </a>\r\n    <a >\r\n      <i class=\"fa fa-envelope\"></i>\r\n      <span class=\"badge badge-pill badge-success notification\">7</span>\r\n    </a>\r\n    <a >\r\n      <i class=\"fa fa-cog\"></i>\r\n      <span class=\"badge-sonar\"></span>\r\n    </a>\r\n    <a >\r\n      <i class=\"fa fa-power-off\" (click)=\"CloseSession()\"></i>\r\n    </a>\r\n  </div>\r\n","import { importType } from '@angular/compiler/src/output/output_ast';\r\nimport { Injectable } from '@angular/core';\r\nimport { UrlApi } from '../services/varsglobal';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from \"../../../node_modules/rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DocumentService {\r\n\r\n  url: string = UrlApi.urlApitest_CNet;\r\n  constructor( private _httpC: HttpClient) { }\r\n\r\n  getDocById(id):Observable<any>{\r\n    return this._httpC.get(this.url + \"DocOrdinario/\"+id);\r\n  }\r\n\r\n  getAllDoc():Observable<any>{\r\n    return this._httpC.get(this.url + \"DocOrdinario\");\r\n  }\r\n}\r\n","import { Component, OnInit, TemplateRef } from '@angular/core';\r\nimport { BsModalRef, BsModalService, ModalOptions } from 'ngx-bootstrap/modal';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { Clientes, Documentos } from '../../../models/globlaIsclass';\r\nimport { FormControl, Validators } from '@angular/forms';\r\nimport { DocumentService } from '../../../services/document.service';\r\nimport { ClientService } from '../../../services/client.service';\r\ndeclare var jQuery: any;\r\ndeclare var $: any;\r\nimport swal from 'sweetalert';\r\n\r\nconst ELEMENT_DATA: Clientes[] = [];\r\n\r\n@Component({\r\n  selector: 'app-facturacion',\r\n  templateUrl: './facturacion.component.html',\r\n  styleUrls: ['./facturacion.component.css']\r\n})\r\n\r\nexport class FacturacionComponent implements OnInit {\r\n  displayedColumns: string[] = [ 'identificacion', 'nombre', 'tipo','seleccione'];\r\n  dataSource = new MatTableDataSource(ELEMENT_DATA);\r\n  modalRef: BsModalRef;\r\n  modalRef2: BsModalRef;\r\n  checked = false;\r\n  selection = new SelectionModel<Clientes>(true, []);\r\n  public ClienteNew: Clientes = new Clientes(false, 0, \"\", '', '', '', '');\r\n  public ClientesAll: Clientes[] = [];\r\n  animalControl = new FormControl('', [Validators.required]);\r\n  selectFormControl = new FormControl('', Validators.required);\r\n  public documents: Documentos[];\r\n  selectRow: any;\r\n  NoselectRow: any;\r\n  disabledchk = false;\r\n  public loading = false;\r\n\r\n  constructor(public _bsModalRef: BsModalRef\r\n    , private _modalS: BsModalService\r\n    , private _docS: DocumentService\r\n    , private _cliS: ClientService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  openModal(template: TemplateRef<any>, value) {\r\n\r\n    this.Disablechk(false);\r\n\r\n    this.loading = true;\r\n    //No cierra el modal dando click fuera\r\n    let ngxModalOptions: ModalOptions = {\r\n      backdrop: 'static',\r\n      keyboard: false,\r\n      animated: true\r\n    };\r\n\r\n    //Abriendo modal\r\n    if (value == 1) {\r\n      this.GetAllCli();\r\n      this.modalRef = new BsModalRef;\r\n      this.modalRef = this._modalS.show(template, ngxModalOptions);\r\n    } else {\r\n\r\n      this.getDocIdentity();\r\n      // $(\"#nombre\").clear();  \r\n      this.ClienteNew.nombre = \"\";\r\n      this.ClienteNew.tipo = \"\";\r\n      this.ClienteNew.identificacion = \"\";\r\n\r\n      this.modalRef2 = new BsModalRef;\r\n      this.modalRef2 = this._modalS.show(template, ngxModalOptions);\r\n    }\r\n    // console.log(value);\r\n    this.loading = false;\r\n\r\n  }\r\n\r\n\r\n  closeModal(value) {\r\n    // console.log(value);\r\n    if (value == 1) {\r\n      this.modalRef.hide();\r\n    } else {\r\n      this.modalRef2.hide();\r\n    }\r\n\r\n  }\r\n\r\n  findCli(event) {\r\n    //console.log(event);\r\n  }\r\n\r\n  saveCli(event) {\r\n    this.loading = true;\r\n    // console.log(this.ClienteNew);\r\n    // console.log(event);\r\n    this._cliS.saveCli(this.ClienteNew).subscribe(\r\n      response => {\r\n        // console.log(response);\r\n        this.closeModal(2);\r\n        this.GetAllCli()\r\n        this.loading = false;\r\n        swal(\"Guardado exitosamente!\", \"Puede verificarlo el la vista de los clientes!\", \"success\");\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    )\r\n  }\r\n  \r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource.data.length;\r\n    // console.log(numSelected === numRows);\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    this.isAllSelected() ?\r\n      this.selection.clear() :\r\n      this.dataSource.data.forEach(row => this.selection.select(row));\r\n  }\r\n\r\n  /** The label for the checkbox on the passed row */\r\n  checkboxLabel(row?: Clientes): string {\r\n    if (!row) {\r\n\r\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\r\n    }\r\n\r\n\r\n    if (this.selection.isSelected(row)) {\r\n\r\n      this.selectRow = row;\r\n    }\r\n\r\n\r\n\r\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.id + 1}`;\r\n  }\r\n\r\n  getDocIdentity() {\r\n    this.loading = true;\r\n    this._docS.getDocById(1).subscribe(\r\n      response => {\r\n        this.documents = response;\r\n        //   console.log('response');\r\n        //   console.log(this.documents);\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    )\r\n    this.loading = false;\r\n  }\r\n\r\n  GetAllCli() {\r\n    this.loading = true;\r\n    this._cliS.getCli().subscribe(\r\n      response => {\r\n        //console.log(response);\r\n        this.ClientesAll = response;\r\n        // console.log(this.ClientesAll);\r\n        this.dataSource = new MatTableDataSource(this.ClientesAll);\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n    this.loading = false;\r\n  }\r\n  \r\n  editCli(template: TemplateRef<any>, cli) {\r\n    this.loading = true;\r\n    console.log('Here!!!');\r\n    //console.log(this.selectRow.nombre);\r\n    console.log(cli);\r\n    this.openModal(template, 2);\r\n    this.ClienteNew.id = cli.id;\r\n    this.ClienteNew.nombre = cli.nombre;\r\n    this.ClienteNew.tipo = cli.tipo;\r\n    this.ClienteNew.identificacion = cli.identificacion;\r\n    //this.Disablechk(true);\r\n    this.loading = false;\r\n  }\r\n\r\n  enviarCli(template: TemplateRef<any>, cli) {\r\n    this.loading = true;\r\n\r\n    $('#cliSend').val(cli.nombre.trim() + ' (' + cli.identificacion.trim() + ')');\r\n    this.closeModal(1);\r\n\r\n    this.loading = false;    \r\n  }\r\n\r\n  selectCli() {\r\n    this.loading = true;\r\n    if (this.selectRow == undefined) {\r\n      swal(\"Error!\", \"Debe seleccionar un cliente!\", \"error\");\r\n    } else {\r\n      $('#cliSend').val(this.selectRow.nombre.trim() + ' (' + this.selectRow.identificacion.trim() + ')')\r\n      //console.log(this.selectRow); row.nombre.trim() + ' (' + row.identificacion.trim() + ')'\r\n      this.closeModal(1);\r\n    }\r\n    this.loading = false;\r\n  }\r\n\r\n  updateCheckedList(event, cli) {\r\n\r\n    if (event.checked == true) {\r\n\r\n      if (this.checked == true) {\r\n        \r\n        swal(\"Error!\", \"Debe seleccionar un cliente!\", \"error\");\r\n        return event.checked = false;\r\n      }\r\n      else{\r\n       \r\n        this.checked = true;\r\n        this.disabledchk = true;\r\n        this.selectRow = cli;\r\n      }\r\n     \r\n    }\r\n    else {\r\n      this.checked = false;\r\n    }\r\n\r\n  }\r\n\r\n  Disablechk(value) {\r\n    this.disabledchk = value;\r\n  }\r\n\r\n}\r\n","<div class=\"col-md-12\">\r\n\r\n  <div class=\"card col-md-8 cardLeft\">\r\n    <div>\r\n      <form #frmCaja>\r\n        <div class=\"col-md-12\">\r\n          <div class=\"card col-md-2 cardLeft\" id=\"logoBusiness\">\r\n            <img loading=\"lazy\" src=\"../../../../assets/images/prod/pro10.PNG\" class=\"imgTam\" alt=\"\" />\r\n          </div>\r\n          <div class=\"card col-md-6 cardLeft\">\r\n            <form action=\"\" class=\"mid-form\" #frmArticle=\"ngForm\">\r\n              <div class=\"form-group doRight\">\r\n                <label for=\"title\">Numero de Factura : </label>\r\n                <input type=\"text\" name=\"title\" data-rule-minlength=\"2\" required pattern=\"[a-zA-Z ]+\">\r\n\r\n              </div>\r\n\r\n              <div class=\"form-group doRight\">\r\n                <label for=\"title\">Comprobante : </label>\r\n                <input type=\"text\" name=\"title\" data-rule-minlength=\"2\" required pattern=\"[a-zA-Z ]+\">\r\n\r\n              </div>\r\n\r\n              <div class=\"doLeft\">\r\n                <label for=\"title\">Cliente : </label>\r\n              </div>\r\n              <div class=\"form-group doRight\">                \r\n                <input type=\"text\" id=\"cliSend\" name=\"title\" data-rule-minlength=\"2\" style=\"width: 320px;\" required\r\n                  pattern=\"[a-zA-Z ]+\" [ngClass]=\"{'width': '500px;'}\">\r\n                <button class=\"btn\" (click)=\"openModal(template1,1)\"><span> <i\r\n                      class=\"fa fa-search iconBtn\"></i></span></button>\r\n              </div>\r\n\r\n              <div class=\"clearfix\"></div>\r\n            </form>\r\n          </div>\r\n          <div class=\"card col-md-3 cardRight\">\r\n            <form action=\"\" class=\"mid-form\" #frmArticle=\"ngForm\">\r\n              <div class=\"form-group\">\r\n\r\n                <label for=\"title\">Numero de Factura</label>\r\n                <input type=\"text\" name=\"title\" data-rule-minlength=\"2\" required pattern=\"[a-zA-Z ]+\">\r\n\r\n              </div>\r\n\r\n              <div class=\"clearfix\"></div>\r\n\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <div class=\"clearfix\"></div>\r\n        <div>\r\n          <div class=\"card col-md-7\">\r\n            <form action=\"\" class=\"mid-form\" #frmArticle=\"ngForm\">\r\n              <div class=\"form-group\">\r\n\r\n                <label for=\"title\">Numero de Factura</label>\r\n                <input type=\"text\" name=\"title\" data-rule-minlength=\"2\" required pattern=\"[a-zA-Z ]+\">\r\n\r\n              </div>\r\n\r\n\r\n              <div class=\"clearfix\"></div>\r\n\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"card col-md-3 cardRight\">\r\n    <div class=\"row button-card\">\r\n      <button class=\"btn btn-blow\"><span class=\"\"><img loading=\"lazy\"\r\n            src=\"../../../../assets/images/prod/pro1.PNG\" /></span></button>\r\n      <button class=\"btn btn-blow\"><span class=\"\"><img loading=\"lazy\"\r\n            src=\"../../../../assets/images/prod/pro2.PNG\" /></span></button>\r\n      <button class=\"btn btn-blow\"><span class=\"\"><img loading=\"lazy\"\r\n            src=\"../../../../assets/images/prod/pro3.PNG\" /></span></button>\r\n      <button class=\"btn btn-blow\"><span class=\"\"><img loading=\"lazy\"\r\n            src=\"../../../../assets/images/prod/pro4.PNG\" /></span></button>\r\n      <button class=\"btn btn-blow\"><span class=\"\"><img loading=\"lazy\"\r\n            src=\"../../../../assets/images/prod/pro5.PNG\" /></span></button>\r\n      <button class=\"btn btn-blow\"><span class=\"\"><img loading=\"lazy\"\r\n            src=\"../../../../assets/images/prod/pro6.PNG\" /></span></button>\r\n      <button class=\"btn btn-blow\"><span class=\"\"><img loading=\"lazy\"\r\n            src=\"../../../../assets/images/prod/pro7.PNG\" /></span></button>\r\n      <button class=\"btn btn-blow\"><span class=\"\"><img loading=\"lazy\"\r\n            src=\"../../../../assets/images/prod/pro8.PNG\" /></span></button>\r\n      <button class=\"btn btn-blow\"><span class=\"\"><img loading=\"lazy\"\r\n            src=\"../../../../assets/images/prod/pro9.PNG\" /></span></button>\r\n      <button class=\"btn btn-blow\"><span class=\"\"><img loading=\"lazy\"\r\n            src=\"../../../../assets/images/prod/pro10.PNG\" /></span></button>\r\n      <button class=\"btn btn-blow\"><span class=\"\"><img loading=\"lazy\"\r\n            src=\"../../../../assets/images/prod/pro11.PNG\" /></span></button>\r\n      <button class=\"btn btn-blow\"><span class=\"\"><img loading=\"lazy\"\r\n            src=\"../../../../assets/images/prod/pro12.PNG\" /></span></button>\r\n      <button class=\"btn btn-blow\"><span class=\"\"> <i class=\"fa fa-dollar icon-btn-blow\"><a\r\n              class=\"txt-btn-blow\">Pagos</a></i></span></button>\r\n\r\n    </div>\r\n\r\n  </div>\r\n\r\n</div>\r\n\r\n<ng-template #template2 data-backdrop=\"static\" data-keyboard=\"false\" loading=\"lazy\">\r\n  <form action=\"\" id=\"frmAddCli\" class=\"mid-form\" #frmAddCli=\"ngForm\" (ngSubmit)=\"saveCli($event)\">\r\n    <div id=\"modalTest\">\r\n      <div class=\"modal-header\">\r\n        <h4 class=\"modal-title\" id=\"modal-title\">Agregar Clientes</h4>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <div class=\"card col-md-12\">\r\n\r\n          <div class=\"form-group doRight\">\r\n\r\n            <label for=\"title\">Codigo : </label>\r\n            <input type=\"text\" id=\"Id\" name=\"Id\" data-rule-minlength=\"2\" [(ngModel)]=\"ClienteNew.id\" #id=\"ngModel\"\r\n              required pattern=\"[0-9]+\" readonly>\r\n\r\n          </div>\r\n          <div class=\"form-group doRight\">\r\n\r\n            <label for=\"title\">Nombre : </label>\r\n            <input type=\"text\" name=\"nameCli\" id=\"nameCli\" data-rule-minlength=\"2\" [(ngModel)]=\"ClienteNew.nombre\"\r\n              #nombre=\"ngModel\" required pattern=\"[a-zA-Z ]+\" style=\"width: 300px;text-transform:uppercase\">\r\n            <small class=\"smallRed\" *ngIf=\"!nombre.valid && nombre.touched\">\r\n              El nombre del cliente es invalido ??\r\n            </small>\r\n          </div>\r\n\r\n          <div class=\"form-group doRight\">\r\n            <label for=\"title\">Tipo : </label>\r\n            <select class=\"dropdownSelect\" id=\"typeCli\" name=\"typeCli\" required [(ngModel)]=\"ClienteNew.tipo\"\r\n              #tipo=\"ngModel\">\r\n              <option label=\"--- SELECCIONE ---\" values=\"Select\"></option>\r\n              <option *ngFor=\"let doc of documents\" [ngValue]=\"doc.descripcion\">\r\n                {{doc.descripcion}}\r\n              </option>\r\n            </select>\r\n            <small class=\"smallRed\" *ngIf=\"!tipo.valid && tipo.touched\">\r\n              Debe de seleccionar un tipo de documento ??\r\n            </small>\r\n          </div>\r\n\r\n          <div class=\"form-group doRight\">\r\n\r\n            <label for=\"title\">Cedula/Pasaporte/RNC : </label>\r\n            <input type=\"text\" name=\"identityCli\" id=\"identityCli\" [(ngModel)]=\"ClienteNew.identificacion\"\r\n              #identificacion=\"ngModel\" data-rule-minlength=\"5\" required>\r\n            <small class=\"smallRed\" *ngIf=\"!identificacion.valid && identificacion.touched\">\r\n              EL número de identificación es invalido ??\r\n            </small>\r\n          </div>\r\n          <div>\r\n\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-danger btn-margin-right\" (click)=\"closeModal(2)\">Cancelar</button>\r\n        <input type=\"submit\" #btnSend value=\"Guardar\" class=\"btn btn-primary\" [disabled]=\"frmAddCli.invalid\" [ngClass]=\"{\r\n                  'hideAll': frmAddCli.invalid\r\n              }\">\r\n      </div>\r\n    </div>\r\n  </form>\r\n</ng-template>\r\n\r\n<ng-template #template1 data-backdrop=\"static\" data-keyboard=\"false\" id=\"modalTest\" loading=\"lazy\">\r\n  <form action=\"\" class=\"mid-form\" #frmArticle=\"ngForm\" (ngSubmit)=\"findCli($event)\">\r\n    <div>\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\" id=\"modal-title\">Clientes</h5>\r\n        <div>\r\n          <button class=\"btn\" (click)=\"openModal(template2,2)\"><span tooltip=\"Crear Cliente\" placement=\"bottom\"\r\n              show-delay=\"500\"> <i class=\"fa fa-user-plus iconBtn\"></i></span>\r\n          </button>\r\n          <button class=\"btn\" (click)=\"closeModal(1)\"><span tooltip=\"Cerrar\" placement=\"bottom\" show-delay=\"500\"> <i\r\n                class=\"fa fa-times iconBtn btnClose\"></i></span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <div class=\"card col-md-12\">\r\n          <div>\r\n\r\n            <input id=\"inFind\" class=\"form-control\" matInput (keyup)=\"applyFilter($event)\"\r\n              placeholder=\"BUSCAR POR CODIGO, NOMBRE, IDENTIFICACION\" value=\"\" #input>\r\n            <!--input id=\"header_search_query\" #input type=\"search\" matInput (keyup)=\"applyFilter($event)\" name=\"header_search_query\" value=\"\" placeholder=\"Search icons...\" class=\"input-reset color-inherit input-focus all-animate br-pill ph4 sans-serif header-search-input ba bw1 bg-gray1 b--gray1\" -->\r\n\r\n            <!--button type=\"button\" class=\"btn\" style=\"float: right;\" (click)=\"Disablechk(false)\"><span> <i\r\n                  class=\"fa fa-check-square iconBtn\"></i>Habilitar selección</span></button-->\r\n            <table id=\"tblCli\" mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\r\n\r\n              <!-- Position Column \r\n              <ng-container matColumnDef=\"seleccione\">\r\n                <th mat-header-cell *matHeaderCellDef>\r\n                  <mat-checkbox (change)=\"$event ? masterToggle() : null\"\r\n                    [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                    [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\r\n                     [aria-label]=\"checkboxLabel()\"\r\n                     [disabled] =\"true\">\r\n                  </mat-checkbox>\r\n                </th>\r\n                <td mat-cell *matCellDef=\"let row\">\r\n                  <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\r\n                    [checked]=\"selection.isSelected(row)\" [aria-label]=\"checkboxLabel(row)\" (change)=\"updateCheckedList($event,row)\" \r\n                    [disabled]=\"disabledchk\"\r\n                    >\r\n                  </mat-checkbox>\r\n                </td>\r\n\r\n              </ng-container>\r\n            -->\r\n              <!-- Position Column -->\r\n              <ng-container matColumnDef=\"identificacion\">\r\n                <th mat-header-cell *matHeaderCellDef> No. </th>\r\n                <td mat-cell *matCellDef=\"let element\" loading=\"lazy\"> {{element.identificacion}} </td>\r\n              </ng-container>\r\n\r\n              <!-- Name Column -->\r\n              <ng-container matColumnDef=\"nombre\">\r\n                <th mat-header-cell *matHeaderCellDef> Nombre </th>\r\n                <td mat-cell *matCellDef=\"let element\" loading=\"lazy\"> {{element.nombre}} </td>\r\n              </ng-container>\r\n\r\n              <!-- Weight Column -->\r\n              <ng-container matColumnDef=\"tipo\">\r\n                <th mat-header-cell *matHeaderCellDef> Tipo </th>\r\n                <td mat-cell *matCellDef=\"let element\" loading=\"lazy\"> {{element.tipo}} </td>\r\n              </ng-container>\r\n\r\n              <ng-container matColumnDef=\"seleccione\">\r\n                <th mat-header-cell *matHeaderCellDef> </th>\r\n                <td mat-cell *matCellDef=\"let element\">\r\n                  <button class=\"btn\" loading=\"lazy\" (click)=\"editCli(template2,element)\"><span tooltip=\"Editar\"\r\n                      placement=\"bottom\" show-delay=\"500\"> <i class=\"fa fa-pencil iconBtn\"></i></span></button>\r\n                  <button class=\"btn\" loading=\"lazy\" (click)=\"enviarCli(template2,element)\"><span tooltip=\"Enviar\"\r\n                      placement=\"bottom\" show-delay=\"500\"> <i class=\"fa fa-check\"></i></span></button>\r\n                </td>\r\n              </ng-container>\r\n\r\n\r\n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n              <!-- Row shown when there is no matching data. -->\r\n              <tr class=\"mat-row\" *matNoDataRow>\r\n                <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\r\n              </tr>\r\n            </table>\r\n\r\n          </div>\r\n\r\n\r\n          <!--button type=\"submit\" #btnSend class=\"btn\"> <span _ngcontent-fea-c55=\"\"><i _ngcontent-fea-c55=\"\"\r\n                class=\"fa fa-search iconBtn\"></i> Buscar</span></button-->\r\n\r\n        </div>\r\n      </div>\r\n      <!--div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-danger btn-margin-right\" (click)=\"closeModal(1)\">Cancelar</button>       \r\n\r\n      </div-->\r\n    </div>\r\n  </form>\r\n</ng-template>\r\n<!--button type=\"button\" class=\"btn btn-primary\" (click)=\"openModal(template2)\" data-toggle=\"modal\" data-backdrop=\"static\" data-keyboard=\"false\">Create</button-->","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthenticationGuard implements CanActivate {\r\n  constructor(\r\n    private auth: AuthService,\r\n  ) { }\r\n  canActivate(next: ActivatedRouteSnapshot,state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    return this.auth.isLogged;\r\n  }\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgxLoadingModule } from 'ngx-loading';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './components/auth/login/login.component';\r\nimport { RoutingProviders, Routing } from './app.routing';\r\n\r\nimport { AuthenticationGuard } from './services/authentication.guard';\r\nimport { ToastrModule, ToastNoAnimation, ToastNoAnimationModule } from 'ngx-toastr';\r\nimport { TokenInterceptorService } from './services/token-interceptor.service';\r\nimport { ModalModule, BsModalRef } from 'ngx-bootstrap/modal';\r\nimport { HomeComponent } from './components/pages/home/home.component';\r\nimport { SidebarComponent } from './components/pages/sidebar/sidebar.component';\r\nimport { FacturacionComponent } from './components/pages/facturacion/facturacion.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { FooterSidebarComponent } from './components/pages/footer-sidebar/footer-sidebar.component';\r\nimport { HeaderPrincipalComponent } from './components/pages/header-principal/header-principal.component';\r\nimport { ClienteComponent } from './components/pages/cliente/cliente.component';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { TooltipModule } from 'ng2-tooltip-directive';\r\nimport { ProductoComponent } from './components/pages/producto/producto.component';\r\nimport { UserRegComponent } from './components/auth/user-reg/user-reg.component';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { DataTableComponent } from './components/shared/data-table/data-table.component';\r\nimport { ImportFileComponent } from './components/pages/import-file/import-file.component';\r\nimport { NgxSpinnerModule } from \"ngx-spinner\";\r\nimport { LoadingInterceptor } from './services/loading.interceptor';\r\nimport { PatientComponent } from './components/pages/patient/patient.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    HomeComponent,\r\n    SidebarComponent,\r\n    FacturacionComponent,\r\n    FooterSidebarComponent,\r\n    HeaderPrincipalComponent,\r\n    ClienteComponent,\r\n    ProductoComponent,\r\n    UserRegComponent,\r\n    DataTableComponent,\r\n    ImportFileComponent,\r\n    PatientComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    ToastNoAnimationModule.forRoot(),\r\n    ToastrModule.forRoot(),\r\n    NgxLoadingModule.forRoot({}),\r\n    ModalModule.forRoot(),\r\n    Routing,\r\n    MatTableModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    MatIconModule,\r\n    MatCheckboxModule,\r\n    MatSelectModule,\r\n    MatTooltipModule,\r\n    TooltipModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    NgxSpinnerModule\r\n  ],  \r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n  providers: [AuthenticationGuard, {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: TokenInterceptorService,\r\n    multi: true\r\n  },{\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: LoadingInterceptor,\r\n    multi: true\r\n  }, BsModalRef, RoutingProviders],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { ModuleWithProviders } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n//components\r\nimport { LoginComponent } from './components/auth/login/login.component';\r\nimport { UserRegComponent } from './components/auth/user-reg/user-reg.component';\r\nimport { ClienteComponent } from './components/pages/cliente/cliente.component';\r\nimport { FacturacionComponent } from './components/pages/facturacion/facturacion.component';\r\nimport { HomeComponent } from './components/pages/home/home.component';\r\nimport { ImportFileComponent } from './components/pages/import-file/import-file.component';\r\nimport { PatientComponent } from './components/pages/patient/patient.component';\r\nimport { ProductoComponent } from './components/pages/producto/producto.component';\r\nimport { SidebarComponent } from './components/pages/sidebar/sidebar.component';\r\n\r\n//guards\r\nimport { AuthenticationGuard } from './services/authentication.guard';\r\n\r\n//Routes\r\n\r\nconst myRoutes: Routes = [\r\n    { path: '', component: LoginComponent },\r\n    { path: 'login', component: LoginComponent },\r\n    { path: 'home', component: HomeComponent, canActivate:[AuthenticationGuard],\r\nchildren:[\r\n    {path: '*', component: SidebarComponent, canActivate:[AuthenticationGuard]},\r\n    {path: 'caja', component: FacturacionComponent, canActivate:[AuthenticationGuard]},\r\n    {path: 'cli', component: ClienteComponent, canActivate:[AuthenticationGuard]},\r\n    {path: 'items', component: ProductoComponent, canActivate:[AuthenticationGuard]},\r\n    {path: 'user', component: UserRegComponent, canActivate:[AuthenticationGuard]},\r\n    {path: 'importf', component: ImportFileComponent, canActivate:[AuthenticationGuard]},\r\n    {path: 'paci', component: PatientComponent, canActivate:[AuthenticationGuard]}\r\n\r\n] }\r\n];\r\n\r\n//export routes\r\nexport const RoutingProviders: any[] = [];\r\nexport const Routing: ModuleWithProviders<any> = RouterModule.forRoot(myRoutes);//load routes\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-producto',\r\n  templateUrl: './producto.component.html',\r\n  styleUrls: ['./producto.component.css']\r\n})\r\nexport class ProductoComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>producto works!</p>\r\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport * as XLSX from 'xlsx';\r\ndeclare var jQuery: any;\r\ndeclare var $: any;\r\nimport swal from 'sweetalert';\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { UsersService } from '../../../services/users.service';\r\n\r\n@Component({\r\n  selector: 'app-import-file',\r\n  templateUrl: './import-file.component.html',\r\n  styleUrls: ['./import-file.component.css']\r\n})\r\n\r\nexport class ImportFileComponent implements OnInit {\r\n  spinnerEnabled = false;\r\n  keys: string[];\r\n  dataSheet = new Subject();\r\n  @ViewChild('inputFile') inputFile: ElementRef;\r\n  isExcelFile: boolean;\r\n  public loading = false;\r\n  vartarget: DataTransfer;\r\n  dt: any;\r\n  constructor(private spinner: NgxSpinnerService,\r\n    private userS: UsersService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  loadingShow() {\r\n    console.log('Here!!');\r\n    this.spinner.show();\r\n    setTimeout(() => {\r\n      /** spinner ends after 5 seconds */\r\n\r\n    }, 100000);\r\n  }\r\n\r\n  onChange(evt) {\r\n\r\n\r\n    // this.loading = true;\r\n    let data, header;\r\n    const target: DataTransfer = <DataTransfer>(evt.target);\r\n    this.vartarget = target;\r\n    this.isExcelFile = !!target.files[0].name.match(/(.xls|.xlsx)/);\r\n    this.loadingShow();\r\n\r\n    if (target.files.length > 1) {\r\n      this.inputFile.nativeElement.value = '';\r\n    }\r\n    if (this.isExcelFile) {\r\n\r\n      this.spinnerEnabled = true;\r\n      const reader: FileReader = new FileReader();\r\n      reader.onload = (e: any) => {\r\n        /* read workbook */\r\n        const bstr: string = e.target.result;\r\n        const wb: XLSX.WorkBook = XLSX.read(bstr, { type: 'binary' });\r\n\r\n        /* grab first sheet */\r\n        const wsname: string = wb.SheetNames[0];\r\n        const ws: XLSX.WorkSheet = wb.Sheets[wsname];\r\n\r\n        /* save data */\r\n        data = XLSX.utils.sheet_to_json(ws);\r\n      };\r\n      this.spinner.hide();\r\n      reader.readAsBinaryString(target.files[0]);\r\n\r\n      reader.onloadend = (e) => {\r\n        this.spinnerEnabled = false;\r\n        this.keys = Object.keys(data[0]);\r\n        this.dataSheet.next(data)\r\n        //  console.log(this.keys);\r\n        //  console.log(data);DD29-000839 8295209508\r\n        this.dt = data;\r\n      }\r\n\r\n    } else {\r\n      this.inputFile.nativeElement.value = '';\r\n    }\r\n\r\n    //  this.loading = false;\r\n    //this.spinner.hide();\r\n  }\r\n\r\n  removeData() {\r\n    if (this.vartarget != undefined) {\r\n      swal({\r\n        title: \"Estas seguro?\",\r\n        text: \"Estas seguro de eliminar lo cargado?\",\r\n        icon: \"warning\",\r\n        buttons: [\r\n          'No, cancelar!',\r\n          'Yes, estoy seguro!'\r\n        ],\r\n        dangerMode: true,\r\n      })\r\n        .then(willDelete => {\r\n          if (willDelete) {\r\n            this.loading = true;\r\n            this.inputFile.nativeElement.value = '';\r\n            this.dataSheet.next(null);\r\n            this.keys = null;\r\n            this.loading = false;\r\n            swal(\"Eliminado!\", \"La data cargada fue eliminada!\", \"success\");\r\n\r\n          }\r\n        });\r\n    }\r\n\r\n\r\n  }\r\n\r\n  subirData() {\r\n    if (this.vartarget != undefined) {\r\n      swal({\r\n        title: \"Estas seguro?\",\r\n        text: \"Estas seguro de subir lo cargado?\",\r\n        icon: \"warning\",\r\n        buttons: [\r\n          'No, cancelar!',\r\n          'Yes, estoy seguro!'\r\n        ],\r\n        dangerMode: true,\r\n      })\r\n        .then(willDelete => {\r\n          if (willDelete) {\r\n           // console.log(this.dt);\r\n            // console.log(this.dataSheet);\r\n            \r\n            this.loading = true;\r\n            this.userS.saveImport(this.dt, \"usuario\").subscribe(\r\n              response => {\r\n                console.log(response);\r\n                this.inputFile.nativeElement.value = '';\r\n                this.dataSheet.next(null);\r\n                this.keys = null;\r\n                this.loading = false;\r\n                swal(\"Guardado!\", \"La data cargada fue importada!\", \"success\");\r\n              },\r\n              error => {\r\n                console.log(error);\r\n                if(error.status==400){\r\n                  swal(\"Error!\", \"La data cargada habia sido importada anteriormente o tiene algun error en la misma, favor consulte con tecnologia!\", \"error\");\r\n                }\r\n                else{\r\n                  swal(\"Error!\", \"Error en servidor, consulte con tecnologia!\", \"error\");\r\n                }\r\n                this.loading = false;\r\n              }\r\n            );\r\n\r\n\r\n          }\r\n        });\r\n    }\r\n\r\n  }\r\n}\r\n","<div id=\"modalTest\">\r\n  <h4 class=\"modal-title\" id=\"modal-title\">Importación de data</h4>\r\n</div>\r\n\r\n<div>\r\n  <input style=\"background: white;\" type=\"file\" (click)=\"loadingShow()\" (change)=\"onChange($event)\" #inputFile>\r\n  \r\n  <button class=\"btn\" (click)=\"removeData()\"><span tooltip=\"Remove Data\" placement=\"bottom\" show-delay=\"500\"> <i\r\n        class=\"fa fa-trash iconBtn\"></i></span>\r\n  </button>\r\n  <button class=\"btn\" (click)=\"subirData()\"><span tooltip=\"Importar data\" placement=\"bottom\" show-delay=\"500\"> <i\r\n        class=\"fa fa-upload iconBtn\"></i></span>\r\n  </button>\r\n  <a class=\"btn\" href=\"../../../../assets/plantillas/Plantilla Usuarios.xlsx\"><span tooltip=\"Descargar plantilla\" placement=\"bottom\" show-delay=\"500\"> <i\r\n    class=\"fa fa-file-archive iconBtn\"></i></span></a>\r\n \r\n  <div *ngIf=\"isExcelFile === false\">\r\n    <span style=\"color: red;\"> No es un Archivo de Excel </span>\r\n  </div>\r\n  <span *ngIf=\"spinnerEnabled\" class=\"k-i-loading k-icon\"></span>\r\n  <table>\r\n    <th *ngFor=\"let key of keys\">\r\n      {{key}}\r\n    </th>\r\n    <tr *ngFor=\"let item of dataSheet | async\">\r\n      <td *ngFor=\"let key of keys\">\r\n        {{item[key]}}\r\n      </td>\r\n    </tr>\r\n  </table>\r\n</div>\r\n\r\n<div class=\"my-container\">\r\n  <ng-template #customLoadingTemplate>\r\n  </ng-template>\r\n\r\n  <ngx-loading [show]=\"loading\" [config]=\"{ backdropBorderRadius: '3px' }\" [template]=\"customLoadingTemplate\">\r\n  </ngx-loading>\r\n</div>\r\n\r\n<ngx-spinner bdColor=\"rgba(0,0,0,0.67)\" size=\"large\" color=\"#8ebacb\" type=\"square-jelly-box\" [fullScreen]=\"true\">\r\n  <p style=\"color: white\"> Loading... </p>\r\n</ngx-spinner>","import { DataSource } from '@angular/cdk/collections';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable, of as observableOf, merge } from 'rxjs';\r\n\r\n// TODO: Replace this with your own data model type\r\nexport interface DataTableItem {\r\n  name: string;\r\n  id: number;\r\n}\r\n\r\n// TODO: replace this with real data from your application\r\nconst EXAMPLE_DATA: DataTableItem[] = [\r\n  {id: 1, name: 'Hydrogen'},\r\n  {id: 2, name: 'Helium'},\r\n  {id: 3, name: 'Lithium'},\r\n  {id: 4, name: 'Beryllium'},\r\n  {id: 5, name: 'Boron'},\r\n  {id: 6, name: 'Carbon'},\r\n  {id: 7, name: 'Nitrogen'},\r\n  {id: 8, name: 'Oxygen'},\r\n  {id: 9, name: 'Fluorine'},\r\n  {id: 10, name: 'Neon'},\r\n  {id: 11, name: 'Sodium'},\r\n  {id: 12, name: 'Magnesium'},\r\n  {id: 13, name: 'Aluminum'},\r\n  {id: 14, name: 'Silicon'},\r\n  {id: 15, name: 'Phosphorus'},\r\n  {id: 16, name: 'Sulfur'},\r\n  {id: 17, name: 'Chlorine'},\r\n  {id: 18, name: 'Argon'},\r\n  {id: 19, name: 'Potassium'},\r\n  {id: 20, name: 'Calcium'},\r\n];\r\n\r\n/**\r\n * Data source for the DataTable view. This class should\r\n * encapsulate all logic for fetching and manipulating the displayed data\r\n * (including sorting, pagination, and filtering).\r\n */\r\nexport class DataTableDataSource extends DataSource<DataTableItem> {\r\n  data: DataTableItem[] = EXAMPLE_DATA;\r\n  paginator: MatPaginator;\r\n  sort: MatSort;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * Connect this data source to the table. The table will only update when\r\n   * the returned stream emits new items.\r\n   * @returns A stream of the items to be rendered.\r\n   */\r\n  connect(): Observable<DataTableItem[]> {\r\n    // Combine everything that affects the rendered data into one update\r\n    // stream for the data-table to consume.\r\n    const dataMutations = [\r\n      observableOf(this.data),\r\n      this.paginator.page,\r\n      this.sort.sortChange\r\n    ];\r\n\r\n    return merge(...dataMutations).pipe(map(() => {\r\n      return this.getPagedData(this.getSortedData([...this.data]));\r\n    }));\r\n  }\r\n\r\n  /**\r\n   *  Called when the table is being destroyed. Use this function, to clean up\r\n   * any open connections or free any held resources that were set up during connect.\r\n   */\r\n  disconnect() {}\r\n\r\n  /**\r\n   * Paginate the data (client-side). If you're using server-side pagination,\r\n   * this would be replaced by requesting the appropriate data from the server.\r\n   */\r\n  private getPagedData(data: DataTableItem[]) {\r\n    const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n    return data.splice(startIndex, this.paginator.pageSize);\r\n  }\r\n\r\n  /**\r\n   * Sort the data (client-side). If you're using server-side sorting,\r\n   * this would be replaced by requesting the appropriate data from the server.\r\n   */\r\n  private getSortedData(data: DataTableItem[]) {\r\n    if (!this.sort.active || this.sort.direction === '') {\r\n      return data;\r\n    }\r\n\r\n    return data.sort((a, b) => {\r\n      const isAsc = this.sort.direction === 'asc';\r\n      switch (this.sort.active) {\r\n        case 'name': return compare(a.name, b.name, isAsc);\r\n        case 'id': return compare(+a.id, +b.id, isAsc);\r\n        default: return 0;\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\r\nfunction compare(a: string | number, b: string | number, isAsc: boolean) {\r\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { CookieService } from 'ngx-cookie-service'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  constructor(private _router: Router\r\n    , private _actRou: ActivatedRoute\r\n    , private _cookieS: CookieService) { }\r\n\r\n  get isLogged() {\r\n    //this.storeTokens(165656,30);\r\n    if (!(localStorage.getItem('apitoken') && localStorage.getItem('expired_in'))) {      \r\n      \r\n      this._router.navigate(['/']);\r\n      return false;\r\n    }\r\n    else return true;\r\n    \r\n  }\r\n  \r\n  storeTokens(tokens,expireTime) {   \r\n    //this._cookieS.set(\"apitoken\", tokens);\r\n    localStorage.setItem(\"apitoken\", tokens);\r\n    localStorage.setItem(\"expired_in\", expireTime);\r\n  }\r\n\r\n  removeTokens() {\r\n    localStorage.removeItem('apitoken');\r\n    localStorage.removeItem('expired_in');\r\n    localStorage.removeItem('loginDate');\r\n\r\n  }  \r\n  getTokens() {\r\n    return localStorage.getItem('apitoken');\r\n  }\r\n}\r\n","import { AfterViewInit, Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTable } from '@angular/material/table';\r\nimport { UserRegDataSource, UserRegItem } from './user-reg-datasource';\r\nimport { BsModalRef, BsModalService, ModalOptions } from 'ngx-bootstrap/modal';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { Clientes, Usuarios, Documentos } from '../../../models/globlaIsclass';\r\nimport { FormControl, Validators } from '@angular/forms';\r\nimport { DocumentService } from '../../../services/document.service';\r\nimport { UsersService } from '../../../services/users.service';\r\nimport { DataSource } from '@angular/cdk/table';\r\nimport { Router } from '@angular/router';\r\n\r\ndeclare var jQuery: any;\r\ndeclare var $: any;\r\nimport swal from 'sweetalert';\r\n\r\nconst ELEMENT_DATA: Usuarios[] = [];\r\n\r\n@Component({\r\n  selector: 'app-user-reg',\r\n  templateUrl: './user-reg.component.html',\r\n  styleUrls: ['./user-reg.component.css']\r\n})\r\nexport class UserRegComponent implements AfterViewInit, OnInit {\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatTable) table: MatTable<UserRegItem>;\r\n  // dataSource: UserRegDataSource;\r\n  displayedColumns: string[] = ['identificacion', 'nombre', 'tipo', 'seleccione'];\r\n  dataSource = new MatTableDataSource(ELEMENT_DATA);\r\n  modalRef: BsModalRef;\r\n  modalRef2: BsModalRef;\r\n  checked = false;\r\n  selection = new SelectionModel<Usuarios>(true, []);\r\n  public UsuarioNew: Usuarios = new Usuarios(0, \"\", \"\", \"\", \"\", \"\", \"\", 0, \"\", \"\", \"\");\r\n  public UsuariosAll: Usuarios[] = [];\r\n  animalControl = new FormControl('', [Validators.required]);\r\n  selectFormControl = new FormControl('', Validators.required);\r\n  public documents: Documentos[];\r\n  public loading = false;\r\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\r\n\r\n  constructor(public _bsModalRef: BsModalRef\r\n    , private _modalS: BsModalService\r\n    , private _docS: DocumentService\r\n    , private _cliU: UsersService\r\n    , private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.GetAllUsu();\r\n    //this.dataSource = new UserRegDataSource();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.sort = this.sort;\r\n    this.dataSource.paginator = this.paginator;\r\n    // this.table.dataSource = this.dataSource;\r\n  }\r\n\r\n\r\n  closeModal(value) {\r\n    console.log(value);\r\n    if (value == 1) {\r\n      this.modalRef.hide();\r\n    } else {\r\n      this.modalRef2.hide();\r\n    }\r\n\r\n  }\r\n\r\n  saveUser(event) {\r\n    this.loading = true;\r\n    // console.log(this.ClienteNew);\r\n    // console.log(event);\r\n    this._cliU.saveUsu(this.UsuarioNew).subscribe(\r\n      response => {\r\n        // console.log(response);\r\n        this.closeModal(2);\r\n        this.GetAllUsu()\r\n        this.loading = false;\r\n        swal(\"Guardado exitosamente!\", \"Puede verificarlo el la vista de los clientes!\", \"success\");\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    )\r\n  }\r\n  loadUser() {\r\n    this.GetAllUsu();\r\n  }\r\n\r\n  openModal(template: TemplateRef<any>, value) {\r\n\r\n    //this.Disablechk(false);\r\n\r\n    this.loading = true;\r\n    //No cierra el modal dando click fuera\r\n    let ngxModalOptions: ModalOptions = {\r\n      backdrop: 'static',\r\n      keyboard: false,\r\n      animated: true\r\n    };\r\n\r\n    //Abriendo modal   \r\n\r\n    this.getDocIdentity();\r\n    // $(\"#nombre\").clear();  \r\n    this.UsuarioNew. nombre_apellido= \"\";\r\n    this.UsuarioNew.type_ident = \"\";\r\n    this.UsuarioNew.no_ident = 0;\r\n\r\n    this.modalRef2 = new BsModalRef;\r\n    this.modalRef2 = this._modalS.show(template, ngxModalOptions);\r\n\r\n    // console.log(value);\r\n    this.loading = false;\r\n\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource.data.length;\r\n    // console.log(numSelected === numRows);\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    this.isAllSelected() ?\r\n      this.selection.clear() :\r\n      this.dataSource.data.forEach(row => this.selection.select(row));\r\n  }\r\n\r\n  GetAllUsu() {\r\n    this.loading = true;\r\n    const user = \"\";\r\n    const pantalla = \"\";\r\n    this._cliU.getAllUser(user, pantalla).subscribe(\r\n      response => {\r\n        //console.log(response);\r\n        this.UsuariosAll = response;\r\n        console.log(this.UsuariosAll);\r\n        this.dataSource = new MatTableDataSource(this.UsuariosAll);\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n    this.loading = false;\r\n  }\r\n\r\n  getDocIdentity() {\r\n    this.loading = true;\r\n    this._docS.getDocById(1).subscribe(\r\n      response => {\r\n        this.documents = response;\r\n        //   console.log('response');\r\n        //   console.log(this.documents);\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    )\r\n    this.loading = false;\r\n  }\r\n\r\n  goToImport() {\r\n    this.router.navigate(['home/importf']);\r\n  }\r\n}\r\n","<form action=\"\" class=\"mid-form\">\r\n  <div>\r\n    <div class=\"modal-header\">\r\n      <h5 class=\"modal-title\" id=\"modal-title\">Usuarios</h5>\r\n      <div class=\"col-md-2\">\r\n        <div>\r\n          <button class=\"btn\" (click)=\"openModal(template2,2)\"><span tooltip=\"Crear Usuario\" placement=\"bottom\"\r\n              show-delay=\"500\"> <i class=\"fa fa-user-plus iconBtn\"></i></span>\r\n          </button>\r\n      \r\n          <button class=\"btn\" (click)=\"goToImport()\"><span tooltip=\"Importar data Usuarios\" placement=\"bottom\"\r\n              show-delay=\"500\"> <i class=\"fa fa-upload iconBtn\"></i></span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n     \r\n    </div>\r\n\r\n    <div class=\"modal-body\">\r\n      <div class=\"card col-md-12\">\r\n        <div>\r\n\r\n          <input id=\"inFind\" class=\"form-control\" matInput (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"BUSCAR POR CODIGO, NOMBRE, IDENTIFICACION\" value=\"\" #input>\r\n\r\n          <table id=\"tblUsu\" mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8 col-md-12\">\r\n\r\n            <!-- Position Column -->\r\n            <ng-container matColumnDef=\"identificacion\">\r\n              <th mat-header-cell *matHeaderCellDef> No. </th>\r\n              <td mat-cell *matCellDef=\"let element\" loading=\"lazy\"> {{element.codigo}} </td>\r\n            </ng-container>\r\n\r\n            <!-- Name Column -->\r\n            <ng-container matColumnDef=\"nombre\">\r\n              <th mat-header-cell *matHeaderCellDef> Nombre </th>\r\n              <td mat-cell *matCellDef=\"let element\" loading=\"lazy\"> {{element.nombre}} </td>\r\n            </ng-container>\r\n\r\n            <!-- Weight Column -->\r\n            <ng-container matColumnDef=\"tipo\">\r\n              <th mat-header-cell *matHeaderCellDef> Tipo </th>\r\n              <td mat-cell *matCellDef=\"let element\" loading=\"lazy\"> {{element.email}} </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"seleccione\">\r\n              <th mat-header-cell *matHeaderCellDef> </th>\r\n              <td mat-cell *matCellDef=\"let element\">\r\n                <button class=\"btn\" loading=\"lazy\" (Usuck)=\"editUsu(template2,element)\"><span tooltip=\"Editar\"\r\n                    placement=\"bottom\" show-delay=\"500\"> <i class=\"fa fa-pencil iconBtn\"></i></span></button>\r\n                <button class=\"btn\" loading=\"lazy\" (Usuck)=\"enviarUsu(template2,element)\"><span tooltip=\"Enviar\"\r\n                    placement=\"bottom\" show-delay=\"500\"> <i class=\"fa fa-check\"></i></span></button>\r\n              </td>\r\n            </ng-container>\r\n\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n            <!-- Row shown when there is no matching data. -->\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\r\n            </tr>\r\n          </table>\r\n\r\n          <mat-paginator #paginator [length]=\"dataSource?.data.length\" [pageIndex]=\"0\" [pageSize]=\"50\"\r\n            [pageSizeOptions]=\"[25, 50, 100, 250]\">\r\n          </mat-paginator>\r\n        </div>\r\n\r\n\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</form>\r\n\r\n<ng-template #template2 data-backdrop=\"static\" data-keyboard=\"false\" loading=\"lazy\">\r\n  <form action=\"\" id=\"frmAddUser\" class=\"mid-form\" #frmAddUser=\"ngForm\" (ngSubmit)=\"saveUsu($event)\">\r\n    <div id=\"modalTest\">\r\n      <div class=\"modal-header\">\r\n        <h4 class=\"modal-title\" id=\"modal-title\">Agregar Usuario</h4>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <div class=\"card col-md-12\">\r\n\r\n          <div class=\"form-group doRight\">\r\n            <label for=\"title\">Codigo : </label>\r\n            <input type=\"text\" id=\"Id\" name=\"Id\" data-rule-minlength=\"2\" [(ngModel)]=\"UsuarioNew._id\" #id=\"ngModel\"\r\n              required pattern=\"[0-9]+\" readonly>\r\n          </div>\r\n\r\n          <div class=\"form-group doRight\">\r\n            <label for=\"title\">Nombre : </label>\r\n            <input type=\"text\" name=\"nameUsu\" id=\"nameUsu\" data-rule-minlength=\"2\" [(ngModel)]=\"UsuarioNew.full_name\"\r\n              #full_name=\"ngModel\" required pattern=\"[a-zA-Z ]+\" style=\"width: 300px;text-transform:uppercase\">\r\n            <small class=\"smallRed\" *ngIf=\"!full_name.valid && full_name.touched\">\r\n              El nombre del Usuente es invalido ??\r\n            </small>\r\n          </div>\r\n\r\n          <div class=\"form-group doRight\">\r\n            <label for=\"title\">Tipo : </label>\r\n            <select class=\"dropdownSelect\" id=\"typeUsu\" name=\"typeUsu\" required [(ngModel)]=\"UsuarioNew.tipo\"\r\n              #tipo=\"ngModel\">\r\n              <option label=\"--- SELECCIONE ---\" values=\"Select\"></option>\r\n              <option *ngFor=\"let doc of documents\" [ngValue]=\"doc.descripcion\">\r\n                {{doc.descripcion}}\r\n              </option>\r\n            </select>\r\n            <small class=\"smallRed\" *ngIf=\"!tipo.valid && tipo.touched\">\r\n              Debe de seleccionar un tipo de documento ??\r\n            </small>\r\n          </div>\r\n\r\n          <div class=\"form-group doRight\">\r\n            <label for=\"title\">Cedula/Pasaporte/RNC : </label>\r\n            <input type=\"text\" name=\"identityUsu\" id=\"identityUsu\" [(ngModel)]=\"UsuarioNew.no_ident\" #no_ident=\"ngModel\"\r\n              data-rule-minlength=\"5\" required>\r\n            <small class=\"smallRed\" *ngIf=\"!no_ident.valid && no_ident.touched\">\r\n              EL número de identificación es invalido ??\r\n            </small>\r\n          </div>\r\n\r\n          <div class=\"form-group doRight\">\r\n            <label for=\"title\">Departamento : </label>\r\n            <select class=\"dropdownSelect\" id=\"typeUsu\" name=\"typeUsu\" required [(ngModel)]=\"UsuarioNew.department\"\r\n              #tipo=\"ngModel\">\r\n              <option label=\"--- SELECCIONE ---\" values=\"Select\"></option>\r\n              <option *ngFor=\"let doc of documents\" [ngValue]=\"doc.descripcion\">\r\n                {{doc.descripcion}}\r\n              </option>\r\n            </select>\r\n            <small class=\"smallRed\" *ngIf=\"!tipo.valid && tipo.touched\">\r\n              Debe de seleccionar un tipo de documento ??\r\n            </small>\r\n          </div>\r\n\r\n          <div class=\"form-group doRight\">\r\n            <label for=\"title\">Contraseña : </label>\r\n            <input type=\"text\" name=\"passUsu\" id=\"passUsu\" [(ngModel)]=\"UsuarioNew.pass\" #pass=\"ngModel\"\r\n              data-rule-minlength=\"5\" required>\r\n            <small class=\"smallRed\" *ngIf=\"!pass.valid && pass.touched\">\r\n              EL número de identificación es invalido ??\r\n            </small>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-danger btn-margin-right\" (click)=\"closeModal(2)\">Cancelar</button>\r\n        <input type=\"submit\" #btnSend value=\"Guardar\" class=\"btn btn-primary\" [disabled]=\"frmAddUser.invalid\" [ngClass]=\"{\r\n                              'hideAll': frmAddUser.invalid\r\n                          }\">\r\n      </div>\r\n    </div>\r\n  </form>\r\n</ng-template>\r\n\r\n\r\n<ng-template #template1 data-backdrop=\"static\" data-keyboard=\"false\" loading=\"lazy\">\r\n  <form action=\"\" id=\"frmAddMas\" class=\"mid-form\" #frmAddUser=\"ngForm\" (ngSubmit)=\"saveUsu($event)\">\r\n    <div id=\"modalTest\">\r\n      <div class=\"modal-header\">\r\n        <h4 class=\"modal-title\" id=\"modal-title\">Agregar Usuario</h4>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <div class=\"card col-md-12\">\r\n\r\n          <div class=\"form-group doRight\">\r\n            <label for=\"title\">Codigo : </label>\r\n            <input type=\"text\" id=\"Id\" name=\"Id\" data-rule-minlength=\"2\" [(ngModel)]=\"UsuarioNew._id\" #id=\"ngModel\"\r\n              required pattern=\"[0-9]+\" readonly>\r\n          </div>\r\n\r\n          <div class=\"form-group doRight\">\r\n            <label for=\"title\">Nombre : </label>\r\n            <input type=\"text\" name=\"nameUsu\" id=\"nameUsu\" data-rule-minlength=\"2\" [(ngModel)]=\"UsuarioNew.full_name\"\r\n              #full_name=\"ngModel\" required pattern=\"[a-zA-Z ]+\" style=\"width: 300px;text-transform:uppercase\">\r\n            <small class=\"smallRed\" *ngIf=\"!full_name.valid && full_name.touched\">\r\n              El nombre del Usuente es invalido ??\r\n            </small>\r\n          </div>\r\n\r\n          <div class=\"form-group doRight\">\r\n            <label for=\"title\">Tipo : </label>\r\n            <select class=\"dropdownSelect\" id=\"typeUsu\" name=\"typeUsu\" required [(ngModel)]=\"UsuarioNew.tipo\"\r\n              #tipo=\"ngModel\">\r\n              <option label=\"--- SELECCIONE ---\" values=\"Select\"></option>\r\n              <option *ngFor=\"let doc of documents\" [ngValue]=\"doc.descripcion\">\r\n                {{doc.descripcion}}\r\n              </option>\r\n            </select>\r\n            <small class=\"smallRed\" *ngIf=\"!tipo.valid && tipo.touched\">\r\n              Debe de seleccionar un tipo de documento ??\r\n            </small>\r\n          </div>\r\n\r\n          <div class=\"form-group doRight\">\r\n            <label for=\"title\">Cedula/Pasaporte/RNC : </label>\r\n            <input type=\"text\" name=\"identityUsu\" id=\"identityUsu\" [(ngModel)]=\"UsuarioNew.no_ident\" #no_ident=\"ngModel\"\r\n              data-rule-minlength=\"5\" required>\r\n            <small class=\"smallRed\" *ngIf=\"!no_ident.valid && no_ident.touched\">\r\n              EL número de identificación es invalido ??\r\n            </small>\r\n          </div>\r\n\r\n          <div class=\"form-group doRight\">\r\n            <label for=\"title\">Departamento : </label>\r\n            <select class=\"dropdownSelect\" id=\"typeUsu\" name=\"typeUsu\" required [(ngModel)]=\"UsuarioNew.department\"\r\n              #tipo=\"ngModel\">\r\n              <option label=\"--- SELECCIONE ---\" values=\"Select\"></option>\r\n              <option *ngFor=\"let doc of documents\" [ngValue]=\"doc.descripcion\">\r\n                {{doc.descripcion}}\r\n              </option>\r\n            </select>\r\n            <small class=\"smallRed\" *ngIf=\"!tipo.valid && tipo.touched\">\r\n              Debe de seleccionar un tipo de documento ??\r\n            </small>\r\n          </div>\r\n\r\n          <div class=\"form-group doRight\">\r\n            <label for=\"title\">Contraseña : </label>\r\n            <input type=\"text\" name=\"passUsu\" id=\"passUsu\" [(ngModel)]=\"UsuarioNew.pass\" #pass=\"ngModel\"\r\n              data-rule-minlength=\"5\" required>\r\n            <small class=\"smallRed\" *ngIf=\"!pass.valid && pass.touched\">\r\n              EL número de identificación es invalido ??\r\n            </small>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-danger btn-margin-right\" (click)=\"closeModal(2)\">Cancelar</button>\r\n        <input type=\"submit\" #btnSend value=\"Guardar\" class=\"btn btn-primary\" [disabled]=\"frmAddUser.invalid\" [ngClass]=\"{\r\n                              'hideAll': frmAddUser.invalid\r\n                          }\">\r\n      </div>\r\n    </div>\r\n  </form>\r\n</ng-template>","import { SelectionModel } from '@angular/cdk/collections';\r\nimport { Component, OnInit, TemplateRef } from '@angular/core';\r\nimport { FormControl, Validators } from '@angular/forms';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { BsModalRef, BsModalService, ModalOptions } from 'ngx-bootstrap/modal';\r\nimport { Clientes, Documentos, Pacientes } from 'src/app/models/globlaIsclass';\r\nimport { ClientService } from 'src/app/services/client.service';\r\nimport { DocumentService } from 'src/app/services/document.service';\r\n\r\nconst ELEMENT_DATA: Clientes[] = [];\r\n\r\n@Component({\r\n  selector: 'app-patient',\r\n  templateUrl: './patient.component.html',\r\n  styleUrls: ['./patient.component.css']\r\n})\r\n\r\nexport class PatientComponent implements OnInit {\r\n  displayedColumns: string[] = ['identificacion', 'nombre', 'tipo', 'seleccione'];\r\n  dataSource = new MatTableDataSource(ELEMENT_DATA);\r\n  modalRef: BsModalRef;\r\n  modalRef2: BsModalRef;\r\n  selection = new SelectionModel<Clientes>(true, []);\r\n  public PacienteNew: Pacientes = new Pacientes(0, \"\", '', '', '', '', \"\", '', 0, '', '', 0, '', '', '', '', 0, 0, '');\r\n  public PacienteAll: Pacientes[] = [];\r\n  animalControl = new FormControl('', [Validators.required]);\r\n  selectFormControl = new FormControl('', Validators.required);\r\n  public documents: Documentos[];\r\n \r\n  public loading = false;\r\n  constructor(public _bsModalRef: BsModalRef\r\n    , private _modalS: BsModalService\r\n    , private _docS: DocumentService\r\n    , private _cliS: ClientService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  openModal(template: TemplateRef<any>, value) {\r\n\r\n    //this.Disablechk(false);\r\n    \r\n    this.loading = true;\r\n    this.getDocuments(); \r\n    //No cierra el modal dando click fuera\r\n    let ngxModalOptions: ModalOptions = {\r\n      backdrop: 'static',\r\n      keyboard: false,\r\n      animated: true\r\n    };\r\n\r\n    //Abriendo modal\r\n    if (value == 1) {\r\n      // this.GetAllCli();\r\n      this.modalRef = new BsModalRef;\r\n      this.modalRef = this._modalS.show(template, ngxModalOptions);\r\n    } else {\r\n\r\n      // this.getDocIdentity();\r\n      // $(\"#nombre\").clear(); \r\n      \r\n      this.PacienteNew.Nombre = \"\";\r\n      this.PacienteNew.Tipo = \"\";\r\n      this.PacienteNew.TipoDocI = '';\r\n      this.PacienteNew.DocI = 0;\r\n      this.modalRef2 = new BsModalRef;\r\n      this.modalRef2 = this._modalS.show(template, ngxModalOptions);\r\n    }\r\n    // console.log(value);\r\n    this.loading = false;\r\n\r\n  }\r\n\r\n  closeModal(value) {\r\n    // console.log(value);\r\n\r\n    if (value == 1) {\r\n      this.modalRef.hide();\r\n    } else {\r\n      this.modalRef2.hide();\r\n    }\r\n\r\n  }\r\n\r\n  findCli(event) {\r\n    //console.log(event);\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  savePaci(event){\r\n  console.log(this.PacienteNew);\r\n  console.log(event);\r\n  }\r\n\r\n   \r\n  editCli(template: TemplateRef<any>, cli) {\r\n    this.loading = true;\r\n    console.log('Here!!!');\r\n    //console.log(this.selectRow.nombre);\r\n    console.log(cli);\r\n    this.openModal(template, 1);\r\n  }\r\n\r\n  getDocuments(){\r\n    this._docS.getAllDoc().subscribe(\r\n      response =>{\r\n        console.log(response);\r\n        this.documents = response;\r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n","<form action=\"\" class=\"mid-form\" #frmArticle=\"ngForm\" (ngSubmit)=\"findCli($event)\">\r\n  <div>\r\n    <div class=\"modal-header\">\r\n      <h5 class=\"modal-title\" id=\"modal-title\">Pacientes</h5>\r\n      <div>\r\n        <button class=\"btn\" (click)=\"openModal(template1,1)\"><span tooltip=\"Crear Cliente\" placement=\"bottom\"\r\n            show-delay=\"500\"> <i class=\"fa fa-user-plus iconBtn\"></i></span>\r\n        </button>\r\n        <button class=\"btn\" (click)=\"closeModal(1)\"><span tooltip=\"Cerrar\" placement=\"bottom\" show-delay=\"500\"> <i\r\n              class=\"fa fa-times iconBtn btnClose\"></i></span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n      <div class=\"card col-md-12\">\r\n        <div>\r\n\r\n          <input id=\"inFind\" class=\"form-control\" matInput (keyup)=\"applyFilter($event)\"\r\n            placeholder=\"BUSCAR POR CODIGO, NOMBRE, IDENTIFICACION\" value=\"\" #input>\r\n\r\n          <table id=\"tblCli\" mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\r\n\r\n            <ng-container matColumnDef=\"identificacion\">\r\n              <th mat-header-cell *matHeaderCellDef> No. </th>\r\n              <td mat-cell *matCellDef=\"let element\" loading=\"lazy\"> {{element.identificacion}} </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"nombre\">\r\n              <th mat-header-cell *matHeaderCellDef> Nombre </th>\r\n              <td mat-cell *matCellDef=\"let element\" loading=\"lazy\"> {{element.nombre}} </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"tipo\">\r\n              <th mat-header-cell *matHeaderCellDef> Tipo </th>\r\n              <td mat-cell *matCellDef=\"let element\" loading=\"lazy\"> {{element.tipo}} </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"seleccione\">\r\n              <th mat-header-cell *matHeaderCellDef> </th>\r\n              <td mat-cell *matCellDef=\"let element\">\r\n                <button class=\"btn\" loading=\"lazy\" (click)=\"editCli(template2,element)\"><span tooltip=\"Editar\"\r\n                    placement=\"bottom\" show-delay=\"500\"> <i class=\"fa fa-pencil iconBtn\"></i></span></button>\r\n                <button class=\"btn\" loading=\"lazy\" (click)=\"enviarCli(template2,element)\"><span tooltip=\"Enviar\"\r\n                    placement=\"bottom\" show-delay=\"500\"> <i class=\"fa fa-check\"></i></span></button>\r\n              </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n            <tr class=\"mat-row\" *matNoDataRow>\r\n              <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\r\n            </tr>\r\n          </table>\r\n\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</form>\r\n\r\n<ng-template #template1 data-backdrop=\"static\" data-keyboard=\"false\" loading=\"lazy\">\r\n  <form action=\"\" id=\"frmAddPaci\" class=\"mid-form\" #frmAddPaci=\"ngForm\" (ngSubmit)=\"savePaci($event)\">\r\n    <div id=\"modalTest\">\r\n      <div class=\"modal-header\">\r\n        <h4 class=\"modal-title\" id=\"modal-title\">Agregar Paciente</h4>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <div class=\"card col-md-12\">\r\n\r\n          <div class=\"form-group doRight\">\r\n\r\n            <label for=\"title\">Codigo : </label>\r\n            <input type=\"text\" id=\"Id\" name=\"Id\" data-rule-minlength=\"2\" [(ngModel)]=\"PacienteNew.Codigo\" #Codigo=\"ngModel\"\r\n              required pattern=\"[0-9]+\" readonly>\r\n\r\n          </div>\r\n          <div class=\"form-group doRight\">\r\n\r\n            <label for=\"title\">Nombre : </label>\r\n            <input type=\"text\" name=\"namePaci\" id=\"namePaci\" data-rule-minlength=\"2\" [(ngModel)]=\"PacienteNew.Nombre\"\r\n              #Nombre=\"ngModel\" required pattern=\"[a-zA-Z ]+\" style=\"width: 300px;text-transform:uppercase\">\r\n            <small class=\"smallRed\" *ngIf=\"!Nombre.valid && Nombre.touched\">\r\n              El nombre del cliente es invalido ??\r\n            </small>\r\n          </div>\r\n\r\n          <div class=\"form-group doRight\">\r\n            <label for=\"title\">Tipo : </label>\r\n            <select class=\"dropdownSelect\" id=\"typeDocI\" name=\"typeDocI\" required [(ngModel)]=\"PacienteNew.TipoDocI\"\r\n              #TipoDocI=\"ngModel\">\r\n              <option label=\"--- SELECCIONE ---\" values=\"Select\"></option>\r\n              <div *ngFor=\"let doc of documents\">\r\n                <option  [ngValue]=\"doc.descripcion\" *ngIf=\"doc.type == 2\" >                \r\n                  <div>\r\n                      {{doc.descripcion}} \r\n                  </div>                            \r\n               </option>\r\n              </div>\r\n              \r\n            </select>\r\n            <small class=\"smallRed\" *ngIf=\"!TipoDocI.valid && TipoDocI.touched\">\r\n              Debe de seleccionar un tipo de documento ??\r\n            </small>\r\n          </div>\r\n\r\n          <div class=\"form-group doRight\">\r\n\r\n            <label for=\"title\">Cedula/Pasaporte/RNC : </label>\r\n            <input type=\"text\" name=\"identityCli\" id=\"identityCli\" [(ngModel)]=\"PacienteNew.DocI\"\r\n              #DocI=\"ngModel\" data-rule-minlength=\"5\" required>\r\n            <small class=\"smallRed\" *ngIf=\"!DocI.valid && DocI.touched\">\r\n              EL número de identificación es invalido ??\r\n            </small>\r\n          </div>\r\n          <div>\r\n\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-danger btn-margin-right\" (click)=\"closeModal(1)\">Cancelar</button>\r\n        <input type=\"submit\" #btnSend value=\"Guardar\" class=\"btn btn-primary\" [disabled]=\"frmAddPaci.invalid\" [ngClass]=\"{\r\n                    'hideAll': frmAddPaci.invalid\r\n                }\">\r\n      </div>\r\n    </div>\r\n  </form>\r\n</ng-template>","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTable } from '@angular/material/table';\r\nimport { DataTableDataSource, DataTableItem } from './data-table-datasource';\r\n\r\n@Component({\r\n  selector: 'app-data-table',\r\n  templateUrl: './data-table.component.html',\r\n  styleUrls: ['./data-table.component.css']\r\n})\r\nexport class DataTableComponent implements AfterViewInit, OnInit {\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatTable) table: MatTable<DataTableItem>;\r\n  dataSource: DataTableDataSource;\r\n\r\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\r\n  displayedColumns = ['id', 'name'];\r\n\r\n  ngOnInit() {\r\n    this.dataSource = new DataTableDataSource();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.sort = this.sort;\r\n    this.dataSource.paginator = this.paginator;\r\n    this.table.dataSource = this.dataSource;\r\n  }\r\n}\r\n","<div class=\"mat-elevation-z8\">\r\n  <table mat-table class=\"full-width-table\" matSort aria-label=\"Elements\">\r\n    <!-- Id Column -->\r\n    <ng-container matColumnDef=\"id\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Id</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{row.id}}</td>\r\n    </ng-container>\r\n\r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"name\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{row.name}}</td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n  </table>\r\n\r\n  <mat-paginator #paginator\r\n      [length]=\"dataSource?.data.length\"\r\n      [pageIndex]=\"0\"\r\n      [pageSize]=\"50\"\r\n      [pageSizeOptions]=\"[25, 50, 100, 250]\">\r\n  </mat-paginator>\r\n</div>\r\n","export class Clientes {\r\n  constructor ( \r\n    public seleccione: boolean,  \r\n    public id: number,   \r\n    public nombre: string,    \r\n    public estatus: string,\r\n    public identificacion: string,    \r\n    public tipo: string,\r\n    public Fecha: any) {\r\n\r\n  }\r\n   \r\n  }\r\n\r\n  export class Documentos {\r\n    constructor (   \r\n      public _id: number,   \r\n      public descripcion: string,\r\n      public status: string,\r\n      public type: string) {\r\n  \r\n    }\r\n     \r\n    }\r\n\r\n    export class Usuarios {\r\n      constructor (   \r\n        public codigo: number,   \r\n        public nombre_apellido: string,\r\n        public email: string,\r\n        public password: string,       \r\n        public department: string,        \r\n        public usu_status: string, \r\n        public type_ident: string,\r\n        public no_ident: number,\r\n        public fotoperfil: string,\r\n        public token: string,\r\n        public fecha: any\r\n        ) {\r\n    \r\n      }\r\n       \r\n      }\r\n\r\n      export class Pacientes {\r\n        constructor (  \r\n          public Codigo: number,   \r\n          public Nombre: string,    \r\n          public Apellido: string,\r\n          public Direccion: string,    \r\n          public Celular: string,\r\n          public Telefono: string, \r\n          public Sexo: string,   \r\n          public FechaNac: string,    \r\n          public Edad: number,\r\n          public MayorEdad: string,    \r\n          public TipoDocI: string,\r\n          public DocI: number,\r\n          public TipoSangre: string,    \r\n          public Email: string,\r\n          public Tipo: string, \r\n          public ARS: string,   \r\n          public NSS: number,    \r\n          public NoAfiliado: number,\r\n          public TipoServicio: string) {  }\r\n         \r\n        }","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header-principal',\r\n  templateUrl: './header-principal.component.html',\r\n  styleUrls: ['./header-principal.component.css']\r\n})\r\nexport class HeaderPrincipalComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<header id=\"headerPrin\">\r\n    <div class=\"center\">\r\n        <!--LOGO-->\r\n        <div id=\"logo\">\r\n          <img src=\"./assets/images/auth/FacTools4.png\" class=\"app-logo\" [ngClass]=\"'width: 70px;'\" alt=\"Logotipo\">\r\n          \r\n        </div>\r\n        <!--MENU\r\n        <nav id=\"menuPrin\">\r\n             <ul>\r\n                 <li>\r\n                   <a [routerLink]=\"['/home']\" [routerLinkActive]=\"['active']\">Inicio</a>\r\n                 </li>\r\n                 <li>\r\n                  <a [routerLink]=\"['/blog']\" [routerLinkActive]=\"['active']\">Blog</a>\r\n                </li>\r\n                <li>\r\n                  <a [routerLink]=\"['/formulario']\" [routerLinkActive]=\"['active']\">Formulario</a>\r\n                </li>\r\n                <li>\r\n                  <a [routerLink]=\"['/peliculas']\" [routerLinkActive]=\"['active']\">Peliculas</a>\r\n                </li>\r\n                <li>\r\n                  <a [routerLink]=\"['/pagina-de-pruebas']\" [routerLinkActive]=\"['active']\">Pagina 2</a>\r\n                </li>\r\n             </ul>\r\n        </nav>\r\n        -->\r\n        <!--LIMPIAR FLOTADOS-->\r\n        <div class=\"clearfix\"></div>\r\n    </div>\r\n</header>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\ndeclare var jQuery:any;\r\ndeclare var $:any;\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  closesidebar() {\r\n    $(\"#sidebar\").removeClass(\"toggled\");\r\n  }\r\n\r\n  showsidebar() {\r\n    $(\"#sidebar\").addClass(\"toggled\");\r\n  }\r\n\r\n  \r\n}\r\n","<div class=\"page-wrapper chiller-theme toggled\" id=\"sidebar\">\r\n  <app-sidebar></app-sidebar>\r\n     <!-- sidebar-wrapper  -->\r\n  <main class=\"page-content\">\r\n    <app-header-principal></app-header-principal>\r\n    <div class=\"container\">\r\n      \r\n     <router-outlet></router-outlet>\r\n      <!--\r\n      <div class=\"row\">\r\n        <div class=\"form-group col-md-12\">\r\n          <p>This is a responsive sidebar template with dropdown menu based on bootstrap 4 framework.</p>\r\n          <p> You can find the complete code on <a href=\"https://github.com/azouaoui-med/pro-sidebar-template\" target=\"_blank\">\r\n              Github</a>, it contains more themes and background image option</p>\r\n        </div>\r\n        <div class=\"form-group col-md-12\">\r\n          <iframe src=\"https://ghbtns.com/github-btn.html?user=azouaoui-med&repo=pro-sidebar-template&type=star&count=true&size=small\" frameborder=\"0\" scrolling=\"0\" width=\"90px\" height=\"30px\"></iframe>\r\n          <iframe src=\"https://ghbtns.com/github-btn.html?user=azouaoui-med&repo=pro-sidebar-template&type=fork&count=true&size=small\" frameborder=\"0\" scrolling=\"0\" width=\"90px\" height=\"30px\"></iframe>\r\n        </div>\r\n        <div class=\"form-group col-md-12\">\r\n          <div class=\"alert alert-success\" role=\"alert\">\r\n            <h4 class=\"alert-heading\">New !</h4>\r\n            <p>New react pro sidebar library is now available on <a href=\"https://www.npmjs.com/package/react-pro-sidebar\" target=\"_blank\">npm</a> <a href=\"https://github.com/azouaoui-med/react-pro-sidebar\" target=\"_blank\">\r\n                <img alt=\"GitHub stars\" src=\"https://img.shields.io/github/stars/azouaoui-med/react-pro-sidebar?style=social\" />\r\n              </a></p>\r\n            <a href=\"https://github.com/azouaoui-med/react-pro-sidebar\" target=\"_blank\" class=\"btn btn-sm btn-primary mr-2\">\r\n              Github</a>\r\n            <a href=\"https://azouaoui-med.github.io/react-pro-sidebar\" target=\"_blank\" class=\"btn btn-sm btn-success\">\r\n              Demo</a>\r\n\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n      <h5>More templates</h5>\r\n      <hr>\r\n      <div class=\"row\">\r\n        <div class=\"col-xs-12 col-sm-6 col-md-6 col-lg-6\">\r\n          <div class=\"card rounded-0 p-0 shadow-sm\">\r\n            <img src=\"https://user-images.githubusercontent.com/25878302/58369568-a49b2480-7efc-11e9-9ca9-2be44afacda1.png\" class=\"card-img-top rounded-0\" alt=\"Angular pro sidebar\">\r\n            <div class=\"card-body text-center\">\r\n              <h6 class=\"card-title\">Angular Pro Sidebar</h6>\r\n              <a href=\"https://github.com/azouaoui-med/angular-pro-sidebar\" target=\"_blank\" class=\"btn btn-primary btn-sm\">Github</a>\r\n              <a href=\"https://azouaoui-med.github.io/angular-pro-sidebar/demo/\" target=\"_blank\" class=\"btn btn-success btn-sm\">Demo</a>\r\n              <hr>\r\n              <a href=\"https://github.com/azouaoui-med/react-pro-sidebar\" target=\"_blank\">\r\n                <img alt=\"GitHub stars\" src=\"https://img.shields.io/github/stars/azouaoui-med/angular-pro-sidebar?style=social\" />\r\n              </a>\r\n              <a href=\"https://github.com/azouaoui-med/react-pro-sidebar\" target=\"_blank\">\r\n                <img alt=\"GitHub stars\" src=\"https://img.shields.io/github/forks/azouaoui-med/angular-pro-sidebar?style=social\" />\r\n              </a>\r\n\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n        <div class=\"col-xs-12 col-sm-6 col-md-6 col-lg-6\">\r\n          <div class=\"card rounded-0 p-0 shadow-sm\">\r\n            <img src=\"https://user-images.githubusercontent.com/25878302/58369258-33f20900-7ef8-11e9-8ff3-b277cb7ed7b4.PNG\" class=\"card-img-top rounded-0\" alt=\"Angular pro sidebar\">\r\n            <div class=\"card-body text-center\">\r\n              <h6 class=\"card-title\">Angular Dashboard</h6>\r\n              <a href=\"https://github.com/azouaoui-med/lightning-admin-angular\" target=\"_blank\" class=\"btn btn-primary btn-sm\">Github</a>\r\n              <a href=\"https://azouaoui-med.github.io/lightning-admin-angular/demo/\" target=\"_blank\" class=\"btn btn-success btn-sm\">Demo</a>\r\n              <hr>\r\n              <a href=\"https://github.com/azouaoui-med/react-pro-sidebar\" target=\"_blank\">\r\n                <img alt=\"GitHub stars\" src=\"https://img.shields.io/github/stars/azouaoui-med/lightning-admin-angular?style=social\" />\r\n              </a>\r\n              <a href=\"https://github.com/azouaoui-med/react-pro-sidebar\" target=\"_blank\">\r\n                <img alt=\"GitHub stars\" src=\"https://img.shields.io/github/forks/azouaoui-med/lightning-admin-angular?style=social\" />\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <hr>\r\n\r\n      <footer class=\"text-center\">\r\n        <div class=\"mb-2\">\r\n          <small>\r\n            © 2020 made with <i class=\"fa fa-heart\" style=\"color:red\"></i> by - <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://azouaoui.netlify.com\">\r\n              Mohamed Azouaoui\r\n            </a>\r\n          </small>\r\n        </div>\r\n\r\n        <div>\r\n          <a href=\"https://github.com/azouaoui-med\" target=\"_blank\">\r\n            <img alt=\"GitHub followers\" src=\"https://img.shields.io/github/followers/azouaoui-med?label=github&style=social\" />\r\n          </a>\r\n          <a href=\"https://twitter.com/azouaoui_med\" target=\"_blank\">\r\n            <img alt=\"Twitter Follow\" src=\"https://img.shields.io/twitter/follow/azouaoui_med?label=twitter&style=social\" />\r\n          </a>\r\n        </div>\r\n      </footer>\r\n-->\r\n    </div>\r\n\r\n  </main>\r\n  <!-- page-content\" -->\r\n</div>\r\n\r\n<ngx-spinner bdColor = \"rgba(0,0,0,0.67)\" size = \"large\" color = \"#8ebacb\" type = \"square-jelly-box\" [fullScreen] = \"true\"><p style=\"color: white\" > Loading... </p></ngx-spinner>\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}